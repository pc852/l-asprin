asprin_vL version 1.0
Reading from stdin
-:279:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:304:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:385:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:659:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:836:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1037:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1041:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1041:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1047:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1146:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1172:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1292:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1326:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1348:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:189:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:190:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:191:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:192:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:221:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

-:258:20-56: info: atom does not occur in any rule head:
  _p_error_type(T,ordering_min_length(N),M_,N_)

Solving...
Answer: 1
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),3,for(neg(atom(isRaw(1)))),()) preference(1,(1,4),3,for(neg(atom(isSweet(1)))),()) preference(1,(1,7),3,for(neg(atom(isPopular(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,2),3,for(atom(isPale(1))),()) preference(1,(1,5),3,for(atom(isVeg(1))),()) preference(1,aso)
Optimization: 33 6
Answer: 2
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),3,for(neg(atom(isRaw(1)))),()) preference(1,(1,4),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,2),3,for(atom(isVeg(1))),()) preference(1,(1,5),3,for(atom(isVeg(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(0))),()) preference(1,aso)
Optimization: 32 6
Answer: 3
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),3,for(neg(atom(isRaw(1)))),()) preference(1,(1,4),3,for(neg(atom(isPopular(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,2),3,for(atom(isVeg(1))),()) preference(1,(1,5),3,for(atom(isVeg(1))),()) preference(1,(1,7),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 31 6
Answer: 4
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),3,for(neg(atom(isRaw(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,2),3,for(atom(isPale(1))),()) preference(1,(1,5),3,for(atom(isVeg(1))),()) preference(1,(1,7),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 28 6
Answer: 5
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),3,for(neg(atom(isSweet(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,2),3,for(atom(isPale(1))),()) preference(1,(1,5),3,for(atom(isVeg(1))),()) preference(1,(1,7),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 27 6
Answer: 6
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,4),3,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),3,for(neg(atom(isTuna(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 26 6
Answer: 7
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(isSweet(1)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),3,for(neg(atom(isTuna(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 25 6
Answer: 8
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),3,for(neg(atom(isTuna(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(isFattyFish(1))),()) preference(1,aso)
Optimization: 24 6
Answer: 9
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(0))),()) preference(1,(1,7),3,for(atom(hasMajorGrp(0))),()) preference(1,aso)
Optimization: 23 6
Answer: 10
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(0))),()) preference(1,aso)
Optimization: 22 6
Answer: 11
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(isSweet(1)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,4),3,for(neg(atom(isPale(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 21 6
Answer: 12
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,3),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(hasPrice(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(0))),()) preference(1,aso)
Optimization: 20 6
Answer: 13
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,3),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,4),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,5),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,3),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(isPopular(1))),()) preference(1,(1,5),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,(1,7),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 18 6
Answer: 14
preference(1,(1,1),0,for(atom(isSpecial(1))),()) preference(1,(1,1),1,for(neg(atom(isSpecial(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,3),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,4),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,5),3,for(neg(atom(isLight(1)))),()) preference(1,(1,7),3,for(neg(atom(isCreamy(1)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),4,for(neg(atom(isLight(1)))),()) preference(1,(1,4),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),4,for(neg(atom(hasMinorGrp(2)))),()) preference(1,(1,7),4,for(neg(atom(isLight(1)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,3),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(isFattyFish(1))),()) preference(1,(1,5),2,for(atom(isPopular(1))),()) preference(1,(1,7),2,for(atom(isPopular(1))),()) preference(1,(1,1),3,for(atom(hasPrice(0))),()) preference(1,aso)
Optimization: 17 6
Answer: 15
preference(1,(1,6),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,8),0,for(atom(isCreamy(1))),()) preference(1,(1,6),1,for(neg(atom(isPopular(1)))),()) preference(1,(1,6),3,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,7),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,6),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,8),1,for(atom(isLight(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(hasStyle(1))),()) preference(1,(1,8),2,for(atom(isPale(1))),()) preference(1,aso)
Optimization: 15 3
Answer: 16
preference(1,(1,6),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,8),0,for(atom(isCreamy(1))),()) preference(1,(1,6),1,for(neg(atom(isPopular(1)))),()) preference(1,(1,8),2,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,6),3,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,7),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,6),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),4,for(atom(hasStyle(1))),()) preference(1,aso)
Optimization: 13 3
Answer: 17
preference(1,(1,6),0,for(atom(hasMinorGrp(2))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,8),0,for(atom(isCreamy(1))),()) preference(1,(1,6),1,for(neg(atom(isPopular(1)))),()) preference(1,(1,6),3,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,6),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),4,for(neg(atom(isRaw(0)))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,6),2,for(atom(hasPrice(0))),()) preference(1,(1,7),2,for(atom(isFattyFish(1))),()) preference(1,(1,8),2,for(atom(isVeg(1))),()) preference(1,(1,7),3,for(atom(hasStyle(1))),()) preference(1,aso)
Optimization: 10 3
Answer: 18
preference(1,(1,2),0,for(neg(atom(hasStyle(0)))),()) preference(1,(1,3),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,5),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),1,for(neg(atom(isLight(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,1),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,5),4,for(neg(atom(isRaw(0)))),()) preference(1,(1,1),1,for(atom(isSpecial(1))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,5),1,for(atom(isTuna(1))),()) preference(1,(1,7),1,for(atom(isPale(1))),()) preference(1,(1,8),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(isFattyFish(1))),()) preference(1,(1,2),2,for(atom(isPale(1))),()) preference(1,(1,4),2,for(atom(isSpecial(1))),()) preference(1,(1,5),2,for(atom(isCreamy(1))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,7),2,for(atom(isCreamy(1))),()) preference(1,(1,8),2,for(atom(hasPrice(0))),()) preference(1,(1,1),3,for(atom(isPopular(1))),()) preference(1,(1,2),3,for(atom(hasMajorGrp(1))),()) preference(1,(1,3),3,for(atom(isSpecial(1))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),3,for(atom(isPopular(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),3,for(atom(isPopular(1))),()) preference(1,(1,2),4,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),4,for(atom(isCreamy(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(isSpecial(1))),()) preference(1,(1,8),4,for(atom(isPale(1))),()) preference(1,aso)
Optimization: 9 8
Answer: 19
preference(1,(1,2),0,for(neg(atom(hasStyle(0)))),()) preference(1,(1,3),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,5),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),1,for(neg(atom(isLight(1)))),()) preference(1,(1,5),1,for(neg(atom(hasStyle(0)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,8),2,for(neg(atom(isLight(1)))),()) preference(1,(1,1),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,1),1,for(atom(isSpecial(1))),()) preference(1,(1,2),1,for(atom(isPale(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,7),1,for(atom(isPale(1))),()) preference(1,(1,8),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(isSpecial(1))),()) preference(1,(1,5),2,for(atom(isCreamy(1))),()) preference(1,(1,6),2,for(atom(isPale(1))),()) preference(1,(1,7),2,for(atom(isCreamy(1))),()) preference(1,(1,1),3,for(atom(isPopular(1))),()) preference(1,(1,2),3,for(atom(hasMajorGrp(1))),()) preference(1,(1,3),3,for(atom(isSpecial(1))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),3,for(atom(isPopular(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(isVeg(1))),()) preference(1,(1,4),4,for(atom(isCreamy(1))),()) preference(1,(1,5),4,for(atom(hasMajorGrp(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(isSpecial(1))),()) preference(1,aso)
Optimization: 8 8
Answer: 20
preference(1,(1,2),0,for(neg(atom(hasStyle(0)))),()) preference(1,(1,3),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),1,for(neg(atom(isLight(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,8),2,for(neg(atom(isLight(1)))),()) preference(1,(1,1),4,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,1),1,for(atom(isSpecial(1))),()) preference(1,(1,2),1,for(atom(isPale(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isPale(1))),()) preference(1,(1,8),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(isSpecial(1))),()) preference(1,(1,5),2,for(atom(isTuna(1))),()) preference(1,(1,6),2,for(atom(isPale(1))),()) preference(1,(1,7),2,for(atom(isCreamy(1))),()) preference(1,(1,1),3,for(atom(isPopular(1))),()) preference(1,(1,2),3,for(atom(hasMajorGrp(1))),()) preference(1,(1,3),3,for(atom(isSpecial(1))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),3,for(atom(isPale(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(isVeg(1))),()) preference(1,(1,4),4,for(atom(isCreamy(1))),()) preference(1,(1,5),4,for(atom(hasMajorGrp(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(isSpecial(1))),()) preference(1,aso)
Optimization: 7 8
Answer: 21
preference(1,(1,1),0,for(neg(atom(hasStyle(1)))),()) preference(1,(1,2),0,for(atom(isPale(1))),()) preference(1,(1,3),0,for(atom(isPale(1))),()) preference(1,(1,4),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),0,for(atom(hasStyle(0))),()) preference(1,(1,6),0,for(atom(isPale(1))),()) preference(1,(1,7),0,for(neg(atom(hasStyle(1)))),()) preference(1,(1,5),1,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,6),1,for(neg(atom(isVeg(1)))),()) preference(1,(1,7),1,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,8),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,2),2,for(neg(atom(isTuna(1)))),()) preference(1,(1,6),2,for(neg(atom(isTuna(1)))),()) preference(1,(1,7),3,for(neg(atom(isSpecial(1)))),()) preference(1,(1,4),4,for(neg(atom(isPopular(1)))),()) preference(1,(1,1),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,3),1,for(atom(hasStyle(0))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),2,for(atom(hasPrice(0))),()) preference(1,(1,3),3,for(atom(isLight(1))),()) preference(1,(1,4),3,for(atom(isTuna(1))),()) preference(1,aso)
Optimization: 6 8
Answer: 22
preference(1,(1,1),0,for(atom(hasPrice(0))),()) preference(1,(1,2),0,for(neg(atom(hasStyle(0)))),()) preference(1,(1,3),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),0,for(neg(atom(isCreamy(1)))),()) preference(1,(1,6),0,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),1,for(neg(atom(isLight(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,8),1,for(neg(atom(hasStyle(0)))),()) preference(1,(1,2),2,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,3),2,for(neg(atom(hasStyle(1)))),()) preference(1,(1,1),4,for(neg(atom(hasStyle(1)))),()) preference(1,(1,3),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,1),1,for(atom(isFattyFish(1))),()) preference(1,(1,2),1,for(atom(isPale(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isPale(1))),()) preference(1,(1,1),2,for(atom(hasPrice(1))),()) preference(1,(1,4),2,for(atom(isSpecial(1))),()) preference(1,(1,5),2,for(atom(isTuna(1))),()) preference(1,(1,6),2,for(atom(isPale(1))),()) preference(1,(1,7),2,for(atom(isCreamy(1))),()) preference(1,(1,8),2,for(atom(isRaw(1))),()) preference(1,(1,1),3,for(atom(hasStyle(1))),()) preference(1,(1,2),3,for(atom(hasMajorGrp(1))),()) preference(1,(1,3),3,for(atom(isSpecial(1))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),3,for(atom(isPale(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,8),3,for(atom(hasPrice(0))),()) preference(1,(1,2),4,for(atom(isVeg(1))),()) preference(1,(1,4),4,for(atom(isCreamy(1))),()) preference(1,(1,5),4,for(atom(hasMajorGrp(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(isSpecial(1))),()) preference(1,aso)
Optimization: 5 8
Progression : [1;5] (Error: 4)
Answer: 23
preference(1,(1,1),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,3),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,4),0,for(atom(hasPrice(1))),()) preference(1,(1,6),0,for(atom(hasStyle(1))),()) preference(1,(1,7),0,for(atom(hasPrice(0))),()) preference(1,(1,8),0,for(atom(hasStyle(1))),()) preference(1,(1,1),1,for(neg(atom(hasPrice(0)))),()) preference(1,(1,4),1,for(neg(atom(isLight(1)))),()) preference(1,(1,4),2,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),2,for(neg(atom(isSweet(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),3,for(neg(atom(hasMinorGrp(0)))),()) preference(1,(1,2),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),3,for(neg(atom(hasMinorGrp(1)))),()) preference(1,(1,7),3,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),4,for(neg(atom(isSweet(1)))),()) preference(1,(1,4),4,for(neg(atom(isPopular(1)))),()) preference(1,(1,8),4,for(neg(atom(hasMajorGrp(0)))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(isFattyFish(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,8),1,for(atom(isPopular(1))),()) preference(1,(1,1),2,for(atom(isTuna(1))),()) preference(1,(1,2),2,for(atom(isTuna(1))),()) preference(1,(1,3),2,for(atom(isVeg(1))),()) preference(1,(1,7),2,for(atom(isRaw(1))),()) preference(1,(1,8),2,for(atom(hasStyle(0))),()) preference(1,(1,3),3,for(atom(isSweet(1))),()) preference(1,(1,5),3,for(atom(isPale(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,8),3,for(atom(hasMajorGrp(1))),()) preference(1,(1,2),4,for(atom(hasMajorGrp(1))),()) preference(1,(1,6),4,for(atom(hasStyle(0))),()) preference(1,(1,7),4,for(atom(hasMinorGrp(2))),()) preference(1,aso)
Optimization: 1 8
Progression : 1 [1;8] (Error: 7)
Progression : 1 [2;8] (Error: 3)
Answer: 24
preference(1,(1,2),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),0,for(atom(hasPrice(0))),()) preference(1,(1,6),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,4),2,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,7),2,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),3,for(neg(atom(isPopular(1)))),()) preference(1,(1,3),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,5),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,7),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),1,for(atom(isSpecial(1))),()) preference(1,(1,2),1,for(atom(isFattyFish(1))),()) preference(1,(1,3),1,for(atom(isFattyFish(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(isRaw(1))),()) preference(1,(1,2),2,for(atom(isTuna(1))),()) preference(1,(1,3),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,5),2,for(atom(isSpecial(1))),()) preference(1,(1,6),2,for(atom(isPale(1))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),3,for(atom(isPopular(1))),()) preference(1,(1,4),3,for(atom(isSpecial(1))),()) preference(1,(1,5),3,for(atom(isPale(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),4,for(atom(isPale(1))),()) preference(1,(1,4),4,for(atom(isCreamy(1))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,aso)
Optimization: 1 7
Answer: 25
preference(1,(1,2),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,3),0,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,5),0,for(atom(hasPrice(0))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,4),2,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,7),2,for(neg(atom(isSweet(1)))),()) preference(1,(1,2),3,for(neg(atom(isPopular(1)))),()) preference(1,(1,3),4,for(neg(atom(isRaw(1)))),()) preference(1,(1,5),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),1,for(atom(isSpecial(1))),()) preference(1,(1,2),1,for(atom(isFattyFish(1))),()) preference(1,(1,3),1,for(atom(isFattyFish(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(isRaw(1))),()) preference(1,(1,2),2,for(atom(isTuna(1))),()) preference(1,(1,3),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,5),2,for(atom(isSpecial(1))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),3,for(atom(isPopular(1))),()) preference(1,(1,4),3,for(atom(isSpecial(1))),()) preference(1,(1,5),3,for(atom(isPale(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),4,for(atom(isPale(1))),()) preference(1,(1,4),4,for(atom(isCreamy(1))),()) preference(1,(1,7),4,for(atom(hasPrice(1))),()) preference(1,aso)
Optimization: 1 6
Answer: 26
preference(1,(1,1),0,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrice(1)))),()) preference(1,(1,6),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,7),0,for(neg(atom(isSpecial(1)))),()) preference(1,(1,6),1,for(neg(atom(hasPrice(1)))),()) preference(1,(1,7),2,for(neg(atom(isSweet(1)))),()) preference(1,(1,1),3,for(neg(atom(isPopular(1)))),()) preference(1,(1,4),4,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,5),4,for(neg(atom(hasPrice(0)))),()) preference(1,(1,1),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isPopular(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,7),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(isTuna(1))),()) preference(1,(1,5),2,for(atom(isRaw(1))),()) preference(1,(1,6),2,for(atom(isPale(1))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,5),3,for(atom(isPale(1))),()) preference(1,(1,6),3,for(atom(isSpecial(1))),()) preference(1,(1,7),3,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),4,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),4,for(atom(hasPrice(1))),()) preference(1,aso)
Optimization: 1 5
Answer: 27
preference(1,(1,1),0,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,3),2,for(neg(atom(isSweet(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrice(1)))),()) preference(1,(1,5),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),4,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,1),1,for(atom(isPopular(1))),()) preference(1,(1,3),1,for(atom(isSpecial(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,5),2,for(atom(hasPrice(1))),()) preference(1,(1,3),3,for(atom(hasStyle(0))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,3),4,for(atom(hasMajorGrp(1))),()) preference(1,(1,5),4,for(atom(isVeg(1))),()) preference(1,aso)
Optimization: 1 4
Answer: 28
preference(1,(1,1),0,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,4),2,for(neg(atom(isSweet(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrice(0)))),()) preference(1,(1,5),3,for(neg(atom(isRaw(0)))),()) preference(1,(1,4),4,for(neg(atom(isFattyFish(1)))),()) preference(1,(1,1),1,for(atom(isPopular(1))),()) preference(1,(1,4),1,for(atom(isSpecial(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,1),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,4),3,for(atom(hasMinorGrp(1))),()) preference(1,(1,1),4,for(atom(hasPrice(0))),()) preference(1,(1,5),4,for(atom(hasMajorGrp(1))),()) preference(1,aso)
Optimization: 1 3
OPTIMUM FOUND

Models       : 28
  Optimum    : yes
Optimization : 1 3
Calls        : 1
Time         : 15.175s (Solving: 8.80s 1st Model: 0.19s Unsat: 4.10s)
CPU Time     : 41.380s
Threads      : 4        (Winner: 1)

Choices      : 217323   (Domain: 2486)
Conflicts    : 35596    (Analyzed: 35591)
Restarts     : 55       (Average: 647.11 Last: 1385)
Model-Level  : 815.4   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 68925    (Deleted: 7502)
  Binary     : 2593     (Ratio:   3.76%)
  Ternary    : 5553     (Ratio:   8.06%)
  Conflict   : 35590    (Average Length:   82.6 Ratio:  51.64%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 33335    (Average Length:   28.0 Ratio:  48.36%) 
  Distributed: 11265    (Ratio:  31.65% Average LBD: 3.19) 
  Integrated : 33791    (Ratio: 299.96% Unit: 263 Average Jumps: 87.45)
Backjumps    : 35591    (Average:  5.02 Max: 811 Sum: 178753)
  Executed   : 35574    (Average:  5.01 Max: 811 Sum: 178481 Ratio:  99.85%)
  Bounded    : 17       (Average: 16.00 Max:  35 Sum:    272 Ratio:   0.15%)

Rules        : 2465433 
  Choice     : 41      
  Minimize   : 2       
Atoms        : 676571  
Bodies       : 802234  
  Count      : 1768    
Equivalences : 2070714  (Atom=Atom: 593885 Body=Body: 640350 Other: 836479)
Tight        : Yes
Variables    : 93559    (Eliminated:    0 Frozen: 61783)
Constraints  : 1938501  (Binary:  95.3% Ternary:   4.1% Other:   0.7%)


Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> atom(isPale(1)) >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isRaw(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSweet(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(isVeg(1)) >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isPopular(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> atom(isVeg(1)) >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isRaw(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isCreamy(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(isVeg(1)) >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> atom(isVeg(1)) >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isRaw(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isPopular(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(isVeg(1)) >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasPrice(0)) >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> atom(isPale(1)) >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isRaw(0))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isRaw(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(isVeg(1)) >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasPrice(0)) >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> atom(isPale(1)) >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isRaw(0))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSweet(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(isVeg(1)) >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasPrice(0)) >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(hasMinorGrp(0))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(hasMinorGrp(2))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isTuna(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isSweet(1))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(hasPrice(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isTuna(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isRaw(0))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(isFattyFish(1)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isTuna(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isSpecial(1))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasMajorGrp(0)) >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isSpecial(1))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isCreamy(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isSweet(1))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isPale(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isRaw(0))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> not atom(hasStyle(1))  >> not atom(isSpecial(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> atom(hasMinorGrp(0)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isSpecial(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isCreamy(1))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isCreamy(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(isPopular(1)) >> not atom(isCreamy(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasMinorGrp(1)) >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> atom(hasPrice(0)) >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isSpecial(1))  >> not atom(hasPrice(0))  >> atom(hasPrice(0)) >> not atom(isSweet(1))  || atom(isSpecial(1)) ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isCreamy(1))  >> not atom(hasMajorGrp(0))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isCreamy(1))  >> not atom(isLight(1))  ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> not atom(isCreamy(1))  >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isPopular(1)) >> not atom(isLight(1))  >> not atom(hasMinorGrp(2))  ; 
  atom(isSpecial(1)) >> atom(isPopular(1)) >> not atom(isCreamy(1))  >> not atom(isLight(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isPopular(1))  >> atom(hasPrice(0)) >> not atom(isFattyFish(1))  >> not atom(isSpecial(1))  || atom(hasMinorGrp(2)) ; 
  atom(isSpecial(1)) >> atom(hasStyle(1)) >> not atom(isRaw(0))  || not atom(isSpecial(1))  ; 
  atom(isLight(1)) >> atom(isPale(1)) || atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isPopular(1))  >> atom(hasPrice(0)) >> not atom(isFattyFish(1))  >> not atom(isSpecial(1))  || atom(hasMinorGrp(2)) ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> not atom(isRaw(0))  >> atom(hasStyle(1)) || not atom(isSpecial(1))  ; 
  atom(hasMinorGrp(1)) >> not atom(hasMajorGrp(0))  || atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(isPopular(1))  >> atom(hasPrice(0)) >> not atom(isFattyFish(1))  >> not atom(isSpecial(1))  || atom(hasMinorGrp(2)) ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> atom(hasStyle(1)) >> not atom(isRaw(0))  || not atom(isSpecial(1))  ; 
  atom(hasMinorGrp(1)) >> atom(isVeg(1)) || atom(isCreamy(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isSpecial(1)) >> atom(isPale(1)) >> atom(hasMajorGrp(1)) >> atom(hasMinorGrp(2)) || not atom(hasStyle(0))  ; 
  not atom(isLight(1))  >> not atom(hasStyle(1))  >> atom(isSpecial(1)) >> not atom(isRaw(1))  || not atom(isPopular(1))  ; 
  atom(isPopular(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(2)) >> atom(isCreamy(1)) || not atom(isCreamy(1))  ; 
  atom(isTuna(1)) >> atom(isCreamy(1)) >> atom(isPopular(1)) >> not atom(isRaw(0))  || not atom(isCreamy(1))  ; 
  not atom(hasPrice(0))  >> atom(hasPrice(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(1)) || not atom(hasMinorGrp(1))  ; 
  atom(isPale(1)) >> atom(isCreamy(1)) >> atom(hasMinorGrp(2)) >> atom(isSpecial(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> atom(isPopular(1)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(0)) >> atom(isPopular(1)) >> atom(isPale(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isPale(1)) >> not atom(hasMajorGrp(0))  >> atom(hasMajorGrp(1)) >> atom(isVeg(1)) || not atom(hasStyle(0))  ; 
  not atom(isLight(1))  >> not atom(hasStyle(1))  >> atom(isSpecial(1)) >> not atom(isRaw(1))  || not atom(isPopular(1))  ; 
  atom(isPopular(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(2)) >> atom(isCreamy(1)) || not atom(isCreamy(1))  ; 
  not atom(hasStyle(0))  >> atom(isCreamy(1)) >> atom(isPopular(1)) >> atom(hasMajorGrp(1)) || not atom(isCreamy(1))  ; 
  not atom(hasPrice(0))  >> atom(isPale(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(1)) || not atom(hasMinorGrp(1))  ; 
  atom(isPale(1)) >> atom(isCreamy(1)) >> atom(hasMinorGrp(2)) >> atom(isSpecial(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> atom(isPopular(1)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> not atom(isLight(1))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isPale(1)) >> not atom(hasMajorGrp(0))  >> atom(hasMajorGrp(1)) >> atom(isVeg(1)) || not atom(hasStyle(0))  ; 
  not atom(isLight(1))  >> not atom(hasStyle(1))  >> atom(isSpecial(1)) >> not atom(isRaw(1))  || not atom(isPopular(1))  ; 
  atom(isPopular(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(2)) >> atom(isCreamy(1)) || not atom(isCreamy(1))  ; 
  not atom(hasPrice(0))  >> atom(isPale(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(1)) || not atom(hasMinorGrp(1))  ; 
  atom(isPale(1)) >> atom(isCreamy(1)) >> atom(hasMinorGrp(2)) >> atom(isSpecial(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> atom(isPopular(1)) >> not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isTuna(1)) >> atom(isPale(1)) >> atom(hasMajorGrp(1)) ; 
  atom(isSpecial(1)) >> not atom(isLight(1))  >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasMajorGrp(0)) || not atom(hasStyle(1))  ; 
  atom(hasMajorGrp(0)) >> not atom(isTuna(1))  || atom(isPale(1)) ; 
  atom(hasStyle(0)) >> atom(hasPrice(0)) >> atom(isLight(1)) || atom(isPale(1)) ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) >> atom(isTuna(1)) >> not atom(isPopular(1))  || not atom(isSpecial(1))  ; 
  not atom(isFattyFish(1))  || atom(hasStyle(0)) ; 
  not atom(isVeg(1))  >> not atom(isTuna(1))  || atom(isPale(1)) ; 
  not atom(isFattyFish(1))  >> atom(hasPrice(0)) >> not atom(isSpecial(1))  || not atom(hasStyle(1))  ; 
  not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(isFattyFish(1)) >> atom(hasPrice(1)) >> atom(hasStyle(1)) >> not atom(hasStyle(1))  || atom(hasPrice(0)) ; 
  atom(isPale(1)) >> not atom(hasMajorGrp(0))  >> atom(hasMajorGrp(1)) >> atom(isVeg(1)) || not atom(hasStyle(0))  ; 
  not atom(isLight(1))  >> not atom(hasStyle(1))  >> atom(isSpecial(1)) >> not atom(isRaw(1))  || not atom(isPopular(1))  ; 
  atom(isPopular(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(2)) >> atom(isCreamy(1)) || not atom(isCreamy(1))  ; 
  not atom(hasPrice(0))  >> atom(isPale(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(1)) || not atom(hasMinorGrp(1))  ; 
  atom(isPale(1)) >> atom(isCreamy(1)) >> atom(hasMinorGrp(2)) >> atom(isSpecial(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isTuna(1)) >> atom(isPale(1)) >> atom(hasMajorGrp(1)) ; 
  not atom(hasStyle(0))  >> atom(isRaw(1)) >> atom(hasPrice(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrice(0))  >> atom(isTuna(1)) >> not atom(hasMinorGrp(0))  >> not atom(isSweet(1))  || not atom(isPopular(1))  ; 
  atom(isFattyFish(1)) >> atom(isVeg(1)) >> atom(isSweet(1)) || not atom(isSpecial(1))  ; 
  not atom(isLight(1))  >> not atom(isSpecial(1))  >> not atom(hasMinorGrp(1))  >> not atom(isPopular(1))  || atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> not atom(hasPrice(0))  >> atom(isSpecial(1)) >> atom(hasStyle(0)) || atom(hasStyle(1)) ; 
  atom(isSpecial(1)) >> atom(isRaw(1)) >> not atom(hasPrice(0))  >> atom(hasMinorGrp(2)) || atom(hasPrice(0)) ; 
  atom(isPopular(1)) >> atom(hasStyle(0)) >> atom(hasMajorGrp(1)) >> not atom(hasMajorGrp(0))  || atom(hasStyle(1)) ; 
  atom(isSpecial(1)) >> atom(isTuna(1)) >> not atom(isRaw(0))  >> atom(hasMajorGrp(1)) ; 
  atom(isSpecial(1)) >> not atom(isSweet(1))  >> atom(isPale(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isFattyFish(1)) >> atom(isTuna(1)) >> not atom(isPopular(1))  >> atom(isPale(1)) || not atom(isSpecial(1))  ; 
  atom(isFattyFish(1)) >> atom(hasMajorGrp(1)) >> atom(isPopular(1)) >> not atom(isRaw(1))  || not atom(isPopular(1))  ; 
  atom(isPopular(1)) >> not atom(isFattyFish(1))  >> atom(isSpecial(1)) >> atom(isCreamy(1)) || not atom(isSpecial(1))  ; 
  atom(hasMinorGrp(1)) >> atom(isSpecial(1)) >> atom(isPale(1)) >> not atom(hasPrice(0))  || atom(hasPrice(0)) ; 
  not atom(hasPrice(1))  >> atom(isPale(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> not atom(isSweet(1))  >> atom(hasMinorGrp(2)) >> not atom(hasPrice(0))  || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isFattyFish(1)) >> atom(isTuna(1)) >> not atom(isPopular(1))  >> atom(isPale(1)) || not atom(isSpecial(1))  ; 
  atom(isFattyFish(1)) >> atom(hasMajorGrp(1)) >> atom(isPopular(1)) >> not atom(isRaw(1))  || not atom(isPopular(1))  ; 
  atom(isPopular(1)) >> not atom(isFattyFish(1))  >> atom(isSpecial(1)) >> atom(isCreamy(1)) || not atom(isSpecial(1))  ; 
  atom(hasMinorGrp(1)) >> atom(isSpecial(1)) >> atom(isPale(1)) >> not atom(hasPrice(0))  || atom(hasPrice(0)) ; 
  atom(isSpecial(1)) >> not atom(isSweet(1))  >> atom(hasMinorGrp(2)) >> atom(hasPrice(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isSpecial(1)) >> atom(hasMinorGrp(0)) >> not atom(isPopular(1))  || not atom(isFattyFish(1))  ; 
  atom(isPopular(1)) >> atom(isTuna(1)) >> atom(hasMinorGrp(1)) >> not atom(isFattyFish(1))  || not atom(hasPrice(1))  ; 
  not atom(hasPrice(1))  >> atom(isPale(1)) >> atom(isSpecial(1)) >> atom(hasMinorGrp(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> not atom(isSweet(1))  >> atom(hasMinorGrp(2)) >> atom(hasPrice(1)) || not atom(isSpecial(1))  ; 
  atom(isSpecial(1)) >> atom(isRaw(1)) >> atom(isPale(1)) >> not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(isPopular(1)) >> atom(hasMinorGrp(0)) >> not atom(hasPrice(1))  || not atom(isFattyFish(1))  ; 
  atom(isSpecial(1)) >> not atom(isSweet(1))  >> atom(hasStyle(0)) >> atom(hasMajorGrp(1)) ; 
  atom(isSpecial(1)) >> atom(hasMajorGrp(0)) >> atom(hasMinorGrp(1)) >> not atom(isFattyFish(1))  ; 
  atom(isSpecial(1)) >> atom(hasPrice(1)) >> not atom(isRaw(0))  >> atom(isVeg(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(isPopular(1)) >> atom(hasMinorGrp(0)) >> atom(hasMinorGrp(1)) >> atom(hasPrice(0)) || not atom(isFattyFish(1))  ; 
  atom(isSpecial(1)) >> not atom(isSweet(1))  >> atom(hasMinorGrp(1)) >> not atom(isFattyFish(1))  ; 
  atom(isSpecial(1)) >> not atom(hasPrice(0))  >> not atom(isRaw(0))  >> atom(hasMajorGrp(1)) 
}.
