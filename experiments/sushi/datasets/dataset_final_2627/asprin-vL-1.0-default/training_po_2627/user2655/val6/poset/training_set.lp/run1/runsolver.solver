asprin_vL version 1.0
Reading from stdin
-:254:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:264:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:279:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:360:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:634:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:811:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:940:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1012:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1016:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1016:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1022:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1121:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1147:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1267:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1301:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1323:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:164:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:165:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:166:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:167:25-36: info: atom does not occur in any rule head:
  forbid_diff

Solving...
Answer: 1
preference(1,poset)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMajorGrp(1))),()) preference(1,poset)
Optimization: 31 1
Answer: 3
preference(1,(1,12),1,for(atom(isLight(1))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset)
Optimization: 28 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMajorGrp(0))),()) preference(1,poset)
Optimization: 25 1
Answer: 5
preference(1,(1,12),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset)
Optimization: 23 1
Answer: 6
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(2))),()) preference(1,poset)
Optimization: 21 1
Answer: 7
preference(1,(1,6),1,for(atom(hasPrice(0))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset)
Optimization: 20 2
Answer: 8
preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset)
Optimization: 14 1
Answer: 9
preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),2,for(atom(hasMinorGrp(0))),()) preference(1,poset)
Optimization: 12 1
Answer: 10
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),1,for(atom(isSweet(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(isVeg(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),2,for(atom(isVeg(1))),()) preference(1,(1,7),2,for(atom(isVeg(1))),()) preference(1,(1,8),2,for(atom(isVeg(1))),()) preference(1,(1,9),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,10),2,for(atom(isFattyFish(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(isRaw(0))),()) preference(1,poset)
Optimization: 9 12
Answer: 11
preference(1,(1,1),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,7),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),1,for(atom(isSpecial(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,2),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,3),2,for(atom(isVeg(1))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),2,for(atom(isVeg(1))),()) preference(1,(1,7),2,for(atom(isVeg(1))),()) preference(1,(1,8),2,for(atom(isVeg(1))),()) preference(1,(1,9),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,10),2,for(atom(isFattyFish(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(isRaw(0))),()) preference(1,poset)
Optimization: 5 12
Answer: 12
preference(1,(1,1),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,4),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),1,for(atom(hasPrice(1))),()) preference(1,(1,8),1,for(atom(isRaw(0))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,4),2,for(atom(hasPrice(1))),()) preference(1,(1,5),2,for(atom(hasStyle(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,8),2,for(atom(hasPrice(1))),()) preference(1,(1,9),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),2,for(atom(isRaw(0))),()) preference(1,poset)
Optimization: 2 7
Answer: 13
preference(1,(1,1),1,for(atom(hasPrice(0))),()) preference(1,(1,2),1,for(atom(isPale(1))),()) preference(1,(1,3),1,for(atom(isFattyFish(1))),()) preference(1,(1,4),1,for(atom(isFattyFish(1))),()) preference(1,(1,5),1,for(atom(isSpecial(1))),()) preference(1,(1,6),1,for(atom(hasPrice(0))),()) preference(1,(1,7),1,for(atom(isPopular(1))),()) preference(1,(1,8),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,9),1,for(atom(isSpecial(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,11),1,for(atom(isRaw(0))),()) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,1),2,for(atom(isPopular(1))),()) preference(1,(1,2),2,for(atom(hasStyle(0))),()) preference(1,(1,3),2,for(atom(hasPrice(0))),()) preference(1,(1,4),2,for(atom(isRaw(0))),()) preference(1,(1,5),2,for(atom(isFattyFish(1))),()) preference(1,(1,6),2,for(atom(hasStyle(0))),()) preference(1,(1,7),2,for(atom(isPale(1))),()) preference(1,(1,8),2,for(atom(isLight(1))),()) preference(1,(1,9),2,for(atom(isPopular(1))),()) preference(1,(1,10),2,for(atom(isPale(1))),()) preference(1,(1,11),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,poset)
Optimization: 1 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.056 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 1 12
Calls        : 1
Time         : 597.103s (Solving: 587.31s 1st Model: 1.78s Unsat: 0.00s)
CPU Time     : 2357.543s
Threads      : 4        (Winner: 4)

Choices      : 5091985  (Domain: 1405)
Conflicts    : 145166   (Analyzed: 145166)
Restarts     : 214      (Average: 678.35 Last: 8025)
Model-Level  : 271.7   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 13854659 (Deleted: 13743009)
  Binary     : 452      (Ratio:   0.00%)
  Ternary    : 41436    (Ratio:   0.30%)
  Conflict   : 145166   (Average Length: 1013.6 Ratio:   1.05%) 
  Loop       : 13670604 (Average Length:  278.3 Ratio:  98.67%) 
  Other      : 38889    (Average Length:    3.4 Ratio:   0.28%) 
  Distributed: 12968    (Ratio:   0.09% Average LBD: 2.90) 
  Integrated : 38903    (Ratio: 299.99% Unit: 100 Average Jumps: 3089.79)
Backjumps    : 145166   (Average: 29.04 Max: 248178 Sum: 4216270)
  Executed   : 145141   (Average: 29.04 Max: 248178 Sum: 4216184 Ratio: 100.00%)
  Bounded    : 25       (Average:  3.44 Max:  38 Sum:     86 Ratio:   0.00%)

Rules        : 1737964 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 31020   
Bodies       : 1337291 
  Count      : 48      
Equivalences : 34674    (Atom=Atom: 5468 Body=Body: 8527 Other: 20679)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1274900 Gammas: 0)
Variables    : 1289774  (Eliminated:    0 Frozen: 1278112)
Constraints  : 7502767  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMajorGrp(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isLight(1)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMajorGrp(0)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMinorGrp(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(isSpecial(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(isVeg(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMajorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(isVeg(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isVeg(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isVeg(1)) ; 
  atom(hasPrice(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isFattyFish(1)) ; 
  atom(isSweet(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(0)) >> atom(hasMinorGrp(2)) ; 
  atom(isSpecial(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(0)) >> atom(isVeg(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasMinorGrp(2)) >> atom(hasMajorGrp(0)) ; 
  atom(hasPrice(1)) >> atom(isVeg(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isVeg(1)) ; 
  atom(hasMinorGrp(2)) >> atom(isVeg(1)) ; 
  atom(hasPrice(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isFattyFish(1)) ; 
  atom(isSpecial(1)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(hasPrice(1)) ; 
  atom(hasMajorGrp(0)) >> atom(hasStyle(0)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(0)) ; 
  atom(isRaw(0)) >> atom(hasPrice(1)) ; 
  atom(hasPrice(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMinorGrp(2)) >> atom(isRaw(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(0)) >> atom(isPopular(1)) ; 
  atom(isPale(1)) >> atom(hasStyle(0)) ; 
  atom(isFattyFish(1)) >> atom(hasPrice(0)) ; 
  atom(isFattyFish(1)) >> atom(isRaw(0)) ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) ; 
  atom(hasPrice(0)) >> atom(hasStyle(0)) ; 
  atom(isPopular(1)) >> atom(isPale(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isLight(1)) ; 
  atom(isSpecial(1)) >> atom(isPopular(1)) ; 
  atom(hasMinorGrp(0)) >> atom(isPale(1)) ; 
  atom(isRaw(0)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMajorGrp(0)) >> atom(hasStyle(0)) 
}.
