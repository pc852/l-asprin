asprin_vL version 1.0
Reading from stdin
-:254:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:264:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:279:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:360:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:634:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:811:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:940:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1012:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1016:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1016:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1022:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1121:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1147:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1267:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1301:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1323:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:164:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:165:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:166:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:167:25-36: info: atom does not occur in any rule head:
  forbid_diff

Solving...
Answer: 1
preference(1,poset)
Optimization: 36 0
Answer: 2
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasStyle(0))),()) preference(1,poset)
Optimization: 26 1
Answer: 3
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(isPale(1))),()) preference(1,poset)
Optimization: 24 1
Answer: 4
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasMajorGrp(0))),()) preference(1,poset)
Optimization: 19 1
Answer: 5
preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset)
Optimization: 16 1
Answer: 6
preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(isRaw(0))),()) preference(1,poset)
Optimization: 15 2
Answer: 7
preference(1,(1,12),1,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(hasStyle(1))),()) preference(1,poset)
Optimization: 13 1
Answer: 8
preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,12),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),2,for(atom(hasPrice(1))),()) preference(1,(1,12),2,for(atom(isRaw(1))),()) preference(1,poset)
Optimization: 12 2
Answer: 9
preference(1,(1,6),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,12),1,for(atom(hasMinorGrp(0))),()) preference(1,(1,6),2,for(atom(hasMinorGrp(0))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,poset)
Optimization: 11 2
Answer: 10
preference(1,(1,1),1,for(atom(isPale(1))),()) preference(1,(1,2),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,3),1,for(atom(isPale(1))),()) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),()) preference(1,(1,7),1,for(atom(hasStyle(1))),()) preference(1,(1,8),1,for(atom(isLight(1))),()) preference(1,(1,9),1,for(atom(hasPrice(1))),()) preference(1,(1,10),1,for(atom(hasMinorGrp(2))),()) preference(1,(1,11),1,for(atom(isSpecial(1))),()) preference(1,(1,12),1,for(atom(isPale(1))),()) preference(1,(1,1),2,for(atom(hasMinorGrp(1))),()) preference(1,(1,2),2,for(atom(isSpecial(1))),()) preference(1,(1,3),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,5),2,for(atom(hasStyle(1))),()) preference(1,(1,6),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,7),2,for(atom(hasMajorGrp(1))),()) preference(1,(1,8),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,9),2,for(atom(hasMinorGrp(2))),()) preference(1,(1,10),2,for(atom(isPopular(1))),()) preference(1,(1,11),2,for(atom(isLight(1))),()) preference(1,(1,12),2,for(atom(hasPrice(1))),()) preference(1,poset)
Optimization: 10 11
Answer: 11
preference(1,(1,2),1,for(atom(isRaw(1))),()) preference(1,(1,3),1,for(atom(isRaw(1))),()) preference(1,(1,4),1,for(atom(isRaw(1))),()) preference(1,(1,6),1,for(atom(hasStyle(1))),()) preference(1,(1,7),1,for(atom(hasStyle(1))),()) preference(1,(1,8),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,9),1,for(atom(hasStyle(1))),()) preference(1,(1,10),1,for(atom(hasStyle(1))),()) preference(1,(1,11),1,for(atom(isFattyFish(1))),()) preference(1,(1,12),1,for(atom(isSpecial(1))),()) preference(1,(1,2),2,for(atom(hasStyle(0))),()) preference(1,(1,3),2,for(atom(isFattyFish(1))),()) preference(1,(1,4),2,for(atom(isSweet(1))),()) preference(1,(1,6),2,for(atom(isSpecial(1))),()) preference(1,(1,7),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),2,for(atom(isTuna(1))),()) preference(1,(1,9),2,for(atom(hasStyle(0))),()) preference(1,(1,10),2,for(atom(isRaw(1))),()) preference(1,(1,11),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),2,for(atom(isFattyFish(1))),()) preference(1,poset)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Answer: 12
preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,5),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,8),1,for(atom(isTuna(1))),()) preference(1,(1,9),1,for(atom(hasStyle(1))),()) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,2),2,for(atom(isFattyFish(1))),()) preference(1,(1,3),2,for(atom(isPopular(1))),()) preference(1,(1,5),2,for(atom(isPopular(1))),()) preference(1,(1,6),2,for(atom(isTuna(1))),()) preference(1,(1,7),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),2,for(atom(isPopular(1))),()) preference(1,(1,9),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(isFattyFish(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset)
Optimization: 0 9
Answer: 13
preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,3),1,for(atom(hasStyle(1))),()) preference(1,(1,6),1,for(atom(isFattyFish(1))),()) preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,8),1,for(atom(hasStyle(1))),()) preference(1,(1,9),1,for(atom(hasStyle(1))),()) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,2),2,for(atom(isFattyFish(1))),()) preference(1,(1,3),2,for(atom(isPopular(1))),()) preference(1,(1,6),2,for(atom(isPopular(1))),()) preference(1,(1,7),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),2,for(atom(isFattyFish(1))),()) preference(1,(1,9),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(isFattyFish(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset)
Optimization: 0 8
Answer: 14
preference(1,(1,2),1,for(atom(isSpecial(1))),()) preference(1,(1,6),1,for(atom(isRaw(1))),()) preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,8),1,for(atom(isFattyFish(1))),()) preference(1,(1,9),1,for(atom(hasStyle(1))),()) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,2),2,for(atom(isFattyFish(1))),()) preference(1,(1,6),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),2,for(atom(isPopular(1))),()) preference(1,(1,9),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(isPopular(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset)
Optimization: 0 7
Answer: 15
preference(1,(1,6),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,7),1,for(atom(isRaw(1))),()) preference(1,(1,8),1,for(atom(isSpecial(1))),()) preference(1,(1,9),1,for(atom(hasStyle(1))),()) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),()) preference(1,(1,12),1,for(atom(isRaw(1))),()) preference(1,(1,6),2,for(atom(isFattyFish(1))),()) preference(1,(1,7),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,8),2,for(atom(hasMajorGrp(0))),()) preference(1,(1,9),2,for(atom(isRaw(1))),()) preference(1,(1,10),2,for(atom(isTuna(1))),()) preference(1,(1,12),2,for(atom(isSweet(1))),()) preference(1,poset)
Optimization: 0 6
Progression : 0 [2;6] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.175 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 15+
  Optimum    : unknown
Optimization : 0 6
Calls        : 1
Time         : 597.386s (Solving: 587.32s 1st Model: 1.93s Unsat: 0.00s)
CPU Time     : 2357.586s
Threads      : 4        (Winner: 4)

Choices      : 1814984  (Domain: 2288)
Conflicts    : 87120    (Analyzed: 87118)
Restarts     : 169      (Average: 515.49 Last: 5532)
Model-Level  : 1476.9  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 8030602  (Deleted: 7944968)
  Binary     : 376      (Ratio:   0.00%)
  Ternary    : 9532     (Ratio:   0.12%)
  Conflict   : 87118    (Average Length: 1930.3 Ratio:   1.08%) 
  Loop       : 7933549  (Average Length:  241.3 Ratio:  98.79%) 
  Other      : 9935     (Average Length:    5.0 Ratio:   0.12%) 
  Distributed: 3312     (Ratio:   0.04% Average LBD: 2.84) 
  Integrated : 9936     (Ratio: 300.00% Unit: 82 Average Jumps: 3424.43)
Backjumps    : 87118    (Average: 15.03 Max: 30114 Sum: 1309467)
  Executed   : 87097    (Average: 15.03 Max: 30114 Sum: 1309429 Ratio: 100.00%)
  Bounded    : 21       (Average:  1.81 Max:   3 Sum:     38 Ratio:   0.00%)

Rules        : 1738606 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 31462   
Bodies       : 1337777 
  Count      : 48      
Equivalences : 35781    (Atom=Atom: 5691 Body=Body: 8794 Other: 21296)
Tight        : No       (SCCs: 37 Non-Hcfs: 0 Nodes: 1274900 Gammas: 0)
Variables    : 1289993  (Eliminated:    0 Frozen: 1278309)
Constraints  : 7503621  (Binary:  82.5% Ternary:   3.6% Other:  13.9%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasStyle(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(isPale(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isRaw(0)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasPrice(1)) >> atom(hasStyle(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(1)) >> atom(hasPrice(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isRaw(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMinorGrp(2)) >> atom(hasMinorGrp(0)) ; 
  atom(hasMinorGrp(0)) >> atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isPale(1)) >> atom(hasMinorGrp(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isSpecial(1)) ; 
  atom(isPale(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMajorGrp(0)) >> atom(hasStyle(1)) ; 
  atom(hasMinorGrp(1)) >> atom(hasMajorGrp(1)) ; 
  atom(hasStyle(1)) >> atom(hasMajorGrp(1)) ; 
  atom(isLight(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasPrice(1)) >> atom(hasMinorGrp(2)) ; 
  atom(hasMinorGrp(2)) >> atom(isPopular(1)) ; 
  atom(isSpecial(1)) >> atom(isLight(1)) ; 
  atom(isPale(1)) >> atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isRaw(1)) >> atom(hasStyle(0)) ; 
  atom(isRaw(1)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) ; 
  atom(hasStyle(1)) >> atom(isSpecial(1)) ; 
  atom(hasStyle(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasMajorGrp(0)) >> atom(isTuna(1)) ; 
  atom(hasStyle(1)) >> atom(hasStyle(0)) ; 
  atom(hasStyle(1)) >> atom(isRaw(1)) ; 
  atom(isFattyFish(1)) >> atom(hasMajorGrp(0)) ; 
  atom(isSpecial(1)) >> atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSpecial(1)) >> atom(isFattyFish(1)) ; 
  atom(hasStyle(1)) >> atom(isPopular(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isPopular(1)) ; 
  atom(isFattyFish(1)) >> atom(isTuna(1)) ; 
  atom(isRaw(1)) >> atom(hasMajorGrp(0)) ; 
  atom(isTuna(1)) >> atom(isPopular(1)) ; 
  atom(hasStyle(1)) >> atom(isRaw(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSpecial(1)) >> atom(isFattyFish(1)) ; 
  atom(hasStyle(1)) >> atom(isPopular(1)) ; 
  atom(isFattyFish(1)) >> atom(isPopular(1)) ; 
  atom(isRaw(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasStyle(1)) >> atom(isFattyFish(1)) ; 
  atom(hasStyle(1)) >> atom(isRaw(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(isSpecial(1)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(hasMajorGrp(0)) ; 
  atom(isFattyFish(1)) >> atom(isPopular(1)) ; 
  atom(hasStyle(1)) >> atom(isRaw(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isPopular(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasMajorGrp(0)) >> atom(isFattyFish(1)) ; 
  atom(isRaw(1)) >> atom(hasMajorGrp(0)) ; 
  atom(isSpecial(1)) >> atom(hasMajorGrp(0)) ; 
  atom(hasStyle(1)) >> atom(isRaw(1)) ; 
  atom(hasMajorGrp(0)) >> atom(isTuna(1)) ; 
  atom(isRaw(1)) >> atom(isSweet(1)) 
}.
