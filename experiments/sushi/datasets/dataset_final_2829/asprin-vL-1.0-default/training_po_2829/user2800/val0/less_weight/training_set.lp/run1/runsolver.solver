asprin_vL version 1.0
Reading from stdin
-:246:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:256:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:271:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:352:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:613:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:626:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:803:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:932:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1004:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1008:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1008:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1014:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1113:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1139:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1259:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1293:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1315:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:156:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:157:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:158:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,less(weight))
Optimization: 36 0
Answer: 2
preference(1,(1,1),1,for(neg(atom(isPale(1)))),1) preference(1,(1,2),1,for(neg(atom(isVeg(1)))),1) preference(1,(1,3),1,for(neg(atom(isTuna(1)))),1) preference(1,(1,4),1,for(neg(atom(isSpecial(1)))),1) preference(1,(1,5),1,for(neg(atom(isFattyFish(1)))),1) preference(1,(1,6),1,for(neg(atom(isCreamy(1)))),1) preference(1,(1,7),1,for(neg(atom(isSweet(1)))),1) preference(1,(1,8),1,for(neg(atom(isLight(1)))),1) preference(1,(1,9),1,for(neg(atom(isPopular(1)))),1) preference(1,(1,10),1,for(neg(atom(hasPrice(1)))),2) preference(1,less(weight))
Optimization: 23 10
Answer: 3
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),14) preference(1,(1,4),1,for(neg(atom(hasPrice(0)))),6) preference(1,(1,2),1,for(atom(isPale(1))),2) preference(1,(1,3),1,for(atom(isTuna(1))),5) preference(1,(1,5),1,for(atom(isSpecial(1))),12) preference(1,(1,6),1,for(atom(isPopular(1))),9) preference(1,(1,7),1,for(atom(hasMinorGrp(2))),2) preference(1,(1,8),1,for(atom(hasPrice(1))),3) preference(1,(1,9),1,for(atom(isLight(1))),12) preference(1,(1,10),1,for(atom(isRaw(0))),14) preference(1,less(weight))
Optimization: 22 10
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasStyle(1)))),2) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),12) preference(1,(1,2),1,for(atom(isSpecial(1))),12) preference(1,(1,3),1,for(atom(hasPrice(1))),5) preference(1,(1,4),1,for(atom(isCreamy(1))),2) preference(1,(1,5),1,for(atom(hasStyle(0))),12) preference(1,(1,6),1,for(atom(isPopular(1))),9) preference(1,(1,7),1,for(atom(hasMajorGrp(1))),14) preference(1,(1,9),1,for(atom(isLight(1))),12) preference(1,(1,10),1,for(atom(isRaw(0))),14) preference(1,less(weight))
Optimization: 20 10
Answer: 5
preference(1,(1,1),1,for(neg(atom(isFattyFish(1)))),15) preference(1,(1,2),1,for(neg(atom(isTuna(1)))),15) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(0)))),15) preference(1,(1,5),1,for(neg(atom(hasMinorGrp(1)))),2) preference(1,(1,6),1,for(neg(atom(isLight(1)))),2) preference(1,(1,7),1,for(neg(atom(hasPrice(1)))),2) preference(1,(1,9),1,for(neg(atom(isPopular(1)))),15) preference(1,(1,10),1,for(neg(atom(hasStyle(0)))),1) preference(1,(1,3),1,for(atom(hasStyle(1))),15) preference(1,(1,8),1,for(atom(hasPrice(0))),3) preference(1,less(weight))
Optimization: 18 10
Answer: 6
preference(1,(1,1),1,for(neg(atom(isRaw(1)))),3) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,7),1,for(neg(atom(isFattyFish(1)))),10) preference(1,(1,8),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,2),1,for(atom(isFattyFish(1))),13) preference(1,(1,3),1,for(atom(isPopular(1))),11) preference(1,(1,5),1,for(atom(isSweet(1))),10) preference(1,(1,6),1,for(atom(isTuna(1))),4) preference(1,(1,9),1,for(atom(hasMajorGrp(1))),14) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight))
Optimization: 12 10
Answer: 7
preference(1,(1,1),1,for(neg(atom(isRaw(1)))),3) preference(1,(1,4),1,for(neg(atom(hasMinorGrp(2)))),2) preference(1,(1,7),1,for(neg(atom(isFattyFish(1)))),10) preference(1,(1,8),1,for(neg(atom(isSweet(1)))),4) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),5) preference(1,(1,2),1,for(atom(isFattyFish(1))),13) preference(1,(1,3),1,for(atom(isPopular(1))),11) preference(1,(1,5),1,for(atom(isSweet(1))),10) preference(1,(1,6),1,for(atom(hasMajorGrp(1))),14) preference(1,(1,10),1,for(atom(hasMajorGrp(0))),1) preference(1,less(weight))
Optimization: 8 10
Answer: 8
preference(1,(1,4),1,for(neg(atom(isRaw(1)))),15) preference(1,(1,1),1,for(atom(hasMajorGrp(1))),14) preference(1,(1,2),1,for(atom(isSweet(1))),1) preference(1,(1,3),1,for(atom(isRaw(0))),4) preference(1,(1,5),1,for(atom(isVeg(1))),8) preference(1,(1,6),1,for(atom(isPopular(1))),5) preference(1,(1,7),1,for(atom(isFattyFish(1))),1) preference(1,(1,8),1,for(atom(isCreamy(1))),10) preference(1,(1,9),1,for(atom(hasMinorGrp(2))),3) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),15) preference(1,less(weight))
Optimization: 7 10
Answer: 9
preference(1,(1,1),1,for(neg(atom(isPopular(1)))),9) preference(1,(1,2),1,for(neg(atom(hasMinorGrp(1)))),6) preference(1,(1,3),1,for(neg(atom(isTuna(1)))),13) preference(1,(1,5),1,for(neg(atom(hasPrice(1)))),13) preference(1,(1,7),1,for(neg(atom(isPale(1)))),14) preference(1,(1,8),1,for(neg(atom(isSpecial(1)))),12) preference(1,(1,10),1,for(neg(atom(isRaw(1)))),8) preference(1,(1,4),1,for(atom(hasPrice(0))),14) preference(1,(1,6),1,for(atom(isLight(1))),11) preference(1,less(weight))
Optimization: 7 9
Answer: 10
preference(1,(1,1),1,for(neg(atom(isPale(1)))),4) preference(1,(1,7),1,for(neg(atom(isRaw(1)))),15) preference(1,(1,2),1,for(atom(hasPrice(0))),3) preference(1,(1,3),1,for(atom(isVeg(1))),15) preference(1,(1,4),1,for(atom(isSpecial(1))),10) preference(1,(1,5),1,for(atom(hasStyle(0))),7) preference(1,(1,6),1,for(atom(hasMinorGrp(1))),8) preference(1,(1,8),1,for(atom(isLight(1))),7) preference(1,(1,9),1,for(atom(isCreamy(1))),2) preference(1,(1,10),1,for(atom(isPopular(1))),14) preference(1,less(weight))
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.265 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 10+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 597.242s (Solving: 588.86s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2362.854s
Threads      : 4        (Winner: 4)

Choices      : 10773413 (Domain: 754)
Conflicts    : 1815917  (Analyzed: 1815915)
Restarts     : 2609     (Average: 696.02 Last: 51091)
Model-Level  : 420.3   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1821702  (Deleted: 1624192)
  Binary     : 772      (Ratio:   0.04%)
  Ternary    : 215      (Ratio:   0.01%)
  Conflict   : 1815915  (Average Length: 1586.7 Ratio:  99.68%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 5787     (Average Length:  103.7 Ratio:   0.32%) 
  Distributed: 1929     (Ratio:   0.11% Average LBD: 3.34) 
  Integrated : 5787     (Ratio: 300.00% Unit: 28 Average Jumps: 7.21)
Backjumps    : 1815915  (Average:  3.82 Max: 3501 Sum: 6938962)
  Executed   : 1815914  (Average:  3.82 Max: 3501 Sum: 6938958 Ratio: 100.00%)
  Bounded    : 1        (Average:  4.00 Max:   4 Sum:      4 Ratio:   0.00%)

Rules        : 2179681 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 720140  
Bodies       : 737157  
  Sum        : 216     
  Count      : 10      
Equivalences : 2175344  (Atom=Atom: 702355 Body=Body: 719834 Other: 753155)
Tight        : Yes
Variables    : 22121    (Eliminated:    0 Frozen: 14321)
Constraints  : 1503718  (Binary:  98.9% Ternary:   0.5% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: not atom(isPale(1))  ; 
  1 :: not atom(isVeg(1))  ; 
  1 :: not atom(isTuna(1))  ; 
  1 :: not atom(isSpecial(1))  ; 
  1 :: not atom(isFattyFish(1))  ; 
  1 :: not atom(isCreamy(1))  ; 
  1 :: not atom(isSweet(1))  ; 
  1 :: not atom(isLight(1))  ; 
  1 :: not atom(isPopular(1))  ; 
  2 :: not atom(hasPrice(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  14 :: not atom(hasStyle(1))  ; 
  2 :: atom(isPale(1)) ; 
  5 :: atom(isTuna(1)) ; 
  6 :: not atom(hasPrice(0))  ; 
  12 :: atom(isSpecial(1)) ; 
  9 :: atom(isPopular(1)) ; 
  2 :: atom(hasMinorGrp(2)) ; 
  3 :: atom(hasPrice(1)) ; 
  12 :: atom(isLight(1)) ; 
  14 :: atom(isRaw(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: not atom(hasStyle(1))  ; 
  12 :: atom(isSpecial(1)) ; 
  5 :: atom(hasPrice(1)) ; 
  2 :: atom(isCreamy(1)) ; 
  12 :: atom(hasStyle(0)) ; 
  9 :: atom(isPopular(1)) ; 
  14 :: atom(hasMajorGrp(1)) ; 
  12 :: not atom(hasPrice(0))  ; 
  12 :: atom(isLight(1)) ; 
  14 :: atom(isRaw(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  15 :: not atom(isFattyFish(1))  ; 
  15 :: not atom(isTuna(1))  ; 
  15 :: atom(hasStyle(1)) ; 
  15 :: not atom(hasMinorGrp(0))  ; 
  2 :: not atom(hasMinorGrp(1))  ; 
  2 :: not atom(isLight(1))  ; 
  2 :: not atom(hasPrice(1))  ; 
  3 :: atom(hasPrice(0)) ; 
  15 :: not atom(isPopular(1))  ; 
  1 :: not atom(hasStyle(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(isRaw(1))  ; 
  13 :: atom(isFattyFish(1)) ; 
  11 :: atom(isPopular(1)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  10 :: atom(isSweet(1)) ; 
  4 :: atom(isTuna(1)) ; 
  10 :: not atom(isFattyFish(1))  ; 
  5 :: not atom(hasPrice(0))  ; 
  14 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: not atom(isRaw(1))  ; 
  13 :: atom(isFattyFish(1)) ; 
  11 :: atom(isPopular(1)) ; 
  2 :: not atom(hasMinorGrp(2))  ; 
  10 :: atom(isSweet(1)) ; 
  14 :: atom(hasMajorGrp(1)) ; 
  10 :: not atom(isFattyFish(1))  ; 
  4 :: not atom(isSweet(1))  ; 
  5 :: not atom(hasPrice(0))  ; 
  1 :: atom(hasMajorGrp(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  14 :: atom(hasMajorGrp(1)) ; 
  1 :: atom(isSweet(1)) ; 
  4 :: atom(isRaw(0)) ; 
  15 :: not atom(isRaw(1))  ; 
  8 :: atom(isVeg(1)) ; 
  5 :: atom(isPopular(1)) ; 
  1 :: atom(isFattyFish(1)) ; 
  10 :: atom(isCreamy(1)) ; 
  3 :: atom(hasMinorGrp(2)) ; 
  15 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  9 :: not atom(isPopular(1))  ; 
  6 :: not atom(hasMinorGrp(1))  ; 
  13 :: not atom(isTuna(1))  ; 
  14 :: atom(hasPrice(0)) ; 
  13 :: not atom(hasPrice(1))  ; 
  11 :: atom(isLight(1)) ; 
  14 :: not atom(isPale(1))  ; 
  12 :: not atom(isSpecial(1))  ; 
  8 :: not atom(isRaw(1))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: not atom(isPale(1))  ; 
  3 :: atom(hasPrice(0)) ; 
  15 :: atom(isVeg(1)) ; 
  10 :: atom(isSpecial(1)) ; 
  7 :: atom(hasStyle(0)) ; 
  8 :: atom(hasMinorGrp(1)) ; 
  15 :: not atom(isRaw(1))  ; 
  7 :: atom(isLight(1)) ; 
  2 :: atom(isCreamy(1)) ; 
  14 :: atom(isPopular(1)) 
}.
