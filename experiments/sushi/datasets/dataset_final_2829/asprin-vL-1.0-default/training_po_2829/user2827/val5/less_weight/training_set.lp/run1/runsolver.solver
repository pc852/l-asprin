asprin_vL version 1.0
Reading from stdin
-:246:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:256:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:271:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:352:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:613:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:626:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:803:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:932:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1004:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1008:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1008:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1014:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1113:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1139:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1259:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1293:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1315:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:156:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:157:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:158:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,less(weight))
Optimization: 36 0
Answer: 2
preference(1,(1,10),1,for(atom(hasMinorGrp(1))),15) preference(1,less(weight))
Optimization: 23 1
Answer: 3
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,3),1,for(atom(isPale(1))),4) preference(1,(1,4),1,for(atom(isPopular(1))),2) preference(1,(1,5),1,for(atom(isFattyFish(1))),6) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),15) preference(1,less(weight))
Optimization: 7 5
Answer: 4
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,1),1,for(atom(isLight(1))),7) preference(1,(1,3),1,for(atom(isPale(1))),4) preference(1,(1,4),1,for(atom(isPopular(1))),2) preference(1,(1,5),1,for(atom(isFattyFish(1))),7) preference(1,(1,10),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight))
Optimization: 3 6
Answer: 5
preference(1,(1,7),1,for(neg(atom(hasStyle(1)))),5) preference(1,(1,10),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,1),1,for(atom(isFattyFish(1))),2) preference(1,(1,2),1,for(atom(isLight(1))),8) preference(1,(1,3),1,for(atom(isPale(1))),4) preference(1,(1,4),1,for(atom(isPopular(1))),2) preference(1,(1,6),1,for(atom(isRaw(0))),4) preference(1,(1,8),1,for(atom(hasMinorGrp(1))),2) preference(1,less(weight))
Optimization: 2 8
Answer: 6
preference(1,(1,7),1,for(neg(atom(isSweet(1)))),14) preference(1,(1,9),1,for(neg(atom(hasPrice(0)))),1) preference(1,(1,1),1,for(atom(isVeg(1))),10) preference(1,(1,2),1,for(atom(hasMinorGrp(1))),15) preference(1,(1,3),1,for(atom(isPale(1))),10) preference(1,(1,4),1,for(atom(isRaw(0))),15) preference(1,(1,5),1,for(atom(isPopular(1))),1) preference(1,(1,6),1,for(atom(hasStyle(0))),12) preference(1,(1,8),1,for(atom(isFattyFish(1))),14) preference(1,(1,10),1,for(atom(hasPrice(1))),2) preference(1,less(weight))
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 7
preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,9),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(isSweet(1))),5) preference(1,(1,5),1,for(atom(isLight(1))),14) preference(1,(1,6),1,for(atom(isSpecial(1))),1) preference(1,(1,7),1,for(atom(isPale(1))),4) preference(1,(1,10),1,for(atom(isFattyFish(1))),2) preference(1,less(weight))
Optimization: 0 9
Answer: 8
preference(1,(1,8),1,for(neg(atom(hasStyle(1)))),6) preference(1,(1,9),1,for(neg(atom(hasMajorGrp(0)))),2) preference(1,(1,1),1,for(atom(hasMinorGrp(0))),7) preference(1,(1,3),1,for(atom(hasMinorGrp(1))),7) preference(1,(1,4),1,for(atom(isSweet(1))),5) preference(1,(1,5),1,for(atom(isLight(1))),14) preference(1,(1,7),1,for(atom(isPale(1))),4) preference(1,(1,10),1,for(atom(isFattyFish(1))),2) preference(1,less(weight))
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.100 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 596.003s (Solving: 588.06s 1st Model: 0.06s Unsat: 0.00s)
CPU Time     : 2359.651s
Threads      : 4        (Winner: 4)

Choices      : 10595323 (Domain: 695)
Conflicts    : 1780130  (Analyzed: 1780128)
Restarts     : 2669     (Average: 666.96 Last: 48922)
Model-Level  : 1597.6  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 1784403  (Deleted: 1637583)
  Binary     : 508      (Ratio:   0.03%)
  Ternary    : 37       (Ratio:   0.00%)
  Conflict   : 1780128  (Average Length: 1568.1 Ratio:  99.76%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4275     (Average Length:  134.5 Ratio:   0.24%) 
  Distributed: 1425     (Ratio:   0.08% Average LBD: 3.44) 
  Integrated : 4275     (Ratio: 300.00% Unit: 0 Average Jumps: 0.00)
Backjumps    : 1780128  (Average:  3.91 Max: 2843 Sum: 6968416)
  Executed   : 1780127  (Average:  3.91 Max: 2843 Sum: 6968404 Ratio: 100.00%)
  Bounded    : 1        (Average: 12.00 Max:  12 Sum:     12 Ratio:   0.00%)

Rules        : 2173681 
  Choice     : 11      
  Minimize   : 2       
Atoms        : 714140  
Bodies       : 731007  
  Sum        : 216     
  Count      : 10      
Equivalences : 2156894  (Atom=Atom: 696355 Body=Body: 713684 Other: 746855)
Tight        : Yes
Variables    : 22121    (Eliminated:    0 Frozen: 14321)
Constraints  : 1503718  (Binary:  98.9% Ternary:   0.5% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  15 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(isPale(1)) ; 
  2 :: atom(isPopular(1)) ; 
  6 :: atom(isFattyFish(1)) ; 
  5 :: not atom(hasStyle(1))  ; 
  15 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(isLight(1)) ; 
  4 :: atom(isPale(1)) ; 
  2 :: atom(isPopular(1)) ; 
  7 :: atom(isFattyFish(1)) ; 
  5 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasMinorGrp(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(isFattyFish(1)) ; 
  8 :: atom(isLight(1)) ; 
  4 :: atom(isPale(1)) ; 
  2 :: atom(isPopular(1)) ; 
  4 :: atom(isRaw(0)) ; 
  5 :: not atom(hasStyle(1))  ; 
  2 :: atom(hasMinorGrp(1)) ; 
  1 :: not atom(hasPrice(0))  
}.

Learned preference statement: 

#preference(1,less(weight)){
  10 :: atom(isVeg(1)) ; 
  15 :: atom(hasMinorGrp(1)) ; 
  10 :: atom(isPale(1)) ; 
  15 :: atom(isRaw(0)) ; 
  1 :: atom(isPopular(1)) ; 
  12 :: atom(hasStyle(0)) ; 
  14 :: not atom(isSweet(1))  ; 
  14 :: atom(isFattyFish(1)) ; 
  1 :: not atom(hasPrice(0))  ; 
  2 :: atom(hasPrice(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(isSweet(1)) ; 
  14 :: atom(isLight(1)) ; 
  1 :: atom(isSpecial(1)) ; 
  4 :: atom(isPale(1)) ; 
  6 :: not atom(hasStyle(1))  ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(isFattyFish(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasMinorGrp(0)) ; 
  7 :: atom(hasMinorGrp(1)) ; 
  5 :: atom(isSweet(1)) ; 
  14 :: atom(isLight(1)) ; 
  4 :: atom(isPale(1)) ; 
  6 :: not atom(hasStyle(1))  ; 
  2 :: not atom(hasMajorGrp(0))  ; 
  2 :: atom(isFattyFish(1)) 
}.
