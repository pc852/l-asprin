asprin_vL version 1.0
Reading from stdin
-:130:1-16: info: no atoms over signature occur in program:
  output/3

-:119:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:122:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:123:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:124:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 36 0
Answer: 2
preference(1,betterthan) preference(1,(1,20),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,20),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) output(10,better,5)
Optimization: 35 1
Answer: 3
preference(1,betterthan) preference(1,(1,20),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,20),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) output(10,better,2) output(10,better,9) output(10,better,7)
Optimization: 33 1
Answer: 4
preference(1,betterthan) preference(1,(1,20),2,for(atom(hasBodyType(1))),()) preference(1,(1,20),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) output(10,better,2) output(10,better,9) output(10,better,7) output(10,better,3)
Optimization: 32 1
Answer: 5
preference(1,betterthan) preference(1,(1,19),2,for(atom(hasBodyType(1))),()) preference(1,(1,20),2,for(atom(hasEngineCap(2))),()) preference(1,(1,19),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) preference(1,(1,20),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) output(10,better,2) output(10,better,9) output(10,better,7) output(10,better,3) output(10,better,5) output(10,better,6)
Optimization: 30 2
Answer: 6
preference(1,betterthan) preference(1,(1,1),2,for(atom(hasFuelCons(1))),()) preference(1,(1,2),2,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,3),2,for(atom(hasBodyType(1))),()) preference(1,(1,9),2,for(and(atom(hasEngineCap(3)),atom(hasBodyType(1)))),()) preference(1,(1,13),2,for(and(atom(hasEngineCap(1)),atom(hasBodyType(1)))),()) preference(1,(1,16),2,for(and(atom(hasBodyType(1)),atom(hasFuelCons(1)))),()) preference(1,(1,17),2,for(and(atom(hasEngineCap(1)),atom(hasFuelCons(1)))),()) preference(1,(1,18),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(1)))),()) preference(1,(1,19),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(1)))),()) preference(1,(1,20),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(1)))),()) preference(1,(1,1),1,for(atom(hasFuelCons(2))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(3)),atom(hasTransmission(2)))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,9),1,for(and(atom(hasEngineCap(1)),atom(hasTransmission(1)))),()) preference(1,(1,13),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,16),1,for(atom(hasBodyType(2))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,18),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,19),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) output(3,better,7) output(3,better,2) output(9,better,3) output(9,better,7) output(9,better,2) output(3,better,8) output(3,better,6) output(9,better,1) output(9,better,6) output(9,better,8) output(1,better,7) output(1,better,3) output(1,better,2) output(5,better,7) output(5,better,3) output(5,better,2) output(5,better,9) output(6,better,7) output(6,better,2) output(8,better,2) output(8,better,7) output(10,better,2) output(10,better,9) output(10,better,7) output(10,better,3) output(1,better,8) output(1,better,6) output(5,better,1) output(5,better,6) output(5,better,8) output(6,better,8) output(10,better,5) output(10,better,8) output(10,better,6) output(10,better,1)
Optimization: 1 10
Progression : 1 [ 1;10] (Error: 9)
Answer: 7
preference(1,betterthan) preference(1,(1,3),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(1)))),()) preference(1,(1,4),2,for(and(atom(hasTransmission(2)),atom(hasEngineCap(1)))),()) preference(1,(1,6),2,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,8),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,10),2,for(and(atom(hasBodyType(1)),atom(hasFuelCons(1)))),()) preference(1,(1,13),2,for(atom(hasFuelCons(1))),()) preference(1,(1,16),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(1)))),()) preference(1,(1,17),2,for(and(atom(hasBodyType(2)),atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(and(atom(hasTransmission(2)),atom(hasFuelCons(2)))),()) preference(1,(1,4),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(2)))),()) preference(1,(1,6),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(3)))),()) preference(1,(1,8),1,for(and(atom(hasTransmission(1)),atom(hasEngineCap(2)))),()) preference(1,(1,9),1,for(and(atom(hasEngineCap(3)),atom(hasTransmission(2)))),()) preference(1,(1,10),1,for(atom(hasBodyType(2))),()) preference(1,(1,13),1,for(atom(hasFuelCons(2))),()) preference(1,(1,16),1,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) output(3,better,7) output(3,better,2) output(9,better,3) output(9,better,7) output(9,better,2) output(3,better,8) output(3,better,6) output(9,better,1) output(9,better,6) output(9,better,8) output(1,better,7) output(1,better,3) output(1,better,2) output(5,better,7) output(5,better,3) output(5,better,2) output(5,better,9) output(6,better,7) output(6,better,2) output(8,better,2) output(8,better,7) output(10,better,2) output(10,better,9) output(10,better,7) output(10,better,3) output(1,better,8) output(1,better,6) output(5,better,1) output(5,better,6) output(5,better,8) output(6,better,8) output(10,better,5) output(10,better,8) output(10,better,6) output(10,better,1)
Optimization: 1 9
Progression : 1 [2;9] (Error: 3.5)
Progression : 1 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.156 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 1 9
Calls        : 1
Time         : 298.285s (Solving: 294.69s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1181.880s
Threads      : 4        (Winner: 4)

Choices      : 23100157 (Domain: 38852)
Conflicts    : 1765019  (Analyzed: 1765016)
Restarts     : 1716     (Average: 1028.56 Last: 179296)
Model-Level  : 1224.9  
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 1773087  (Deleted: 1674055)
  Binary     : 7810     (Ratio:   0.44%)
  Ternary    : 218      (Ratio:   0.01%)
  Conflict   : 1765016  (Average Length: 3227.4 Ratio:  99.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8071     (Average Length:   90.2 Ratio:   0.46%) 
  Distributed: 2694     (Ratio:   0.15% Average LBD: 2.37) 
  Integrated : 8082     (Ratio: 300.00% Unit: 491 Average Jumps: 611.84)
Backjumps    : 1765016  (Average:  8.63 Max: 7925 Sum: 15230992)
  Executed   : 1764965  (Average:  8.63 Max: 7925 Sum: 15230908 Ratio: 100.00%)
  Bounded    : 51       (Average:  1.65 Max:   3 Sum:     84 Ratio:   0.00%)

Rules        : 802460  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36253   
Bodies       : 137788  
  Count      : 102     
Equivalences : 96562    (Atom=Atom: 19446 Body=Body: 13500 Other: 63616)
Tight        : Yes
Variables    : 40098    (Eliminated:    0 Frozen: 16198)
Constraints  : 267024   (Binary:  86.8% Ternary:  13.0% Other:   0.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) & atom(hasTransmission(1)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasBodyType(1)) & atom(hasTransmission(2)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasBodyType(1)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasBodyType(1)) ; 
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasFuelCons(2)) >> atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(3)) & atom(hasTransmission(2)) >> atom(hasFuelCons(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(1)) >> atom(hasBodyType(1)) ; 
  atom(hasEngineCap(1)) & atom(hasTransmission(1)) >> atom(hasEngineCap(3)) & atom(hasBodyType(1)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(1)) ; 
  atom(hasBodyType(2)) >> atom(hasBodyType(1)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasBodyType(1)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(3)) & atom(hasBodyType(2)) >> atom(hasEngineCap(2)) & atom(hasBodyType(1)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasTransmission(2)) & atom(hasFuelCons(2)) >> atom(hasBodyType(1)) & atom(hasTransmission(1)) ; 
  atom(hasBodyType(2)) & atom(hasEngineCap(2)) >> atom(hasTransmission(2)) & atom(hasEngineCap(1)) ; 
  atom(hasBodyType(2)) & atom(hasEngineCap(3)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) ; 
  atom(hasTransmission(1)) & atom(hasEngineCap(2)) >> atom(hasEngineCap(2)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(3)) & atom(hasTransmission(2)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(2)) ; 
  atom(hasBodyType(2)) >> atom(hasBodyType(1)) & atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(2)) >> atom(hasFuelCons(1)) ; 
  atom(hasBodyType(2)) & atom(hasTransmission(1)) >> atom(hasBodyType(1)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasBodyType(2)) & atom(hasEngineCap(1)) 
}.
