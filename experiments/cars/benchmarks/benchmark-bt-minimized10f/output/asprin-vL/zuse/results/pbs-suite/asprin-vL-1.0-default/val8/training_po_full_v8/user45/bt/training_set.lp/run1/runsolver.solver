asprin_vL version 1.0
Reading from stdin
-:102:1-16: info: no atoms over signature occur in program:
  output/3

-:91:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:94:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:95:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:96:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 8 0
Answer: 2
preference(1,betterthan) preference(1,(1,2),2,for(atom(hasEngineCap(1))),()) preference(1,(1,3),2,for(atom(hasEngineCap(5))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,14),2,for(and(atom(hasTransmission(1)),atom(hasEngineCap(3)))),()) preference(1,(1,18),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(1)))),()) preference(1,(1,19),2,for(and(atom(hasBodyType(1)),atom(hasEngineCap(4)))),()) preference(1,(1,20),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,4),1,for(and(atom(hasFuelCons(1)),atom(hasTransmission(2)))),()) preference(1,(1,14),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(5)))),()) preference(1,(1,18),1,for(atom(hasEngineCap(4))),()) preference(1,(1,19),1,for(and(atom(hasTransmission(1)),atom(hasEngineCap(3)))),()) preference(1,(1,20),1,for(and(atom(hasFuelCons(2)),atom(hasTransmission(2)))),()) output(2,better,9) output(3,better,2) output(4,better,3) output(9,better,7) output(1,better,4) output(5,better,1) output(6,better,5) output(10,better,6)
Optimization: 0 7
Progression : 0 [1;7] (Error: 6)
Progression : 0 [2;7] (Error: 2.5)
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.151 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 2+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 298.295s (Solving: 296.73s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1185.292s
Threads      : 4        (Winner: 4)

Choices      : 46130035 (Domain: 31512)
Conflicts    : 2212733  (Analyzed: 2212730)
Restarts     : 2581     (Average: 857.31 Last: 183918)
Model-Level  : 671.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2221069  (Deleted: 2126914)
  Binary     : 9129     (Ratio:   0.41%)
  Ternary    : 72       (Ratio:   0.00%)
  Conflict   : 2212730  (Average Length: 3371.7 Ratio:  99.62%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8339     (Average Length:  176.2 Ratio:   0.38%) 
  Distributed: 2812     (Ratio:   0.13% Average LBD: 2.21) 
  Integrated : 8436     (Ratio: 300.00% Unit: 532 Average Jumps: 691.86)
Backjumps    : 2212730  (Average: 15.30 Max: 9775 Sum: 33846750)
  Executed   : 2212683  (Average: 15.30 Max: 9775 Sum: 33846650 Ratio: 100.00%)
  Bounded    : 47       (Average:  2.13 Max:   3 Sum:    100 Ratio:   0.00%)

Rules        : 228824  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36029   
Bodies       : 104644  
  Count      : 102     
Equivalences : 96541    (Atom=Atom: 19419 Body=Body: 13560 Other: 63562)
Tight        : Yes
Variables    : 31411    (Eliminated:    0 Frozen: 16171)
Constraints  : 171137   (Binary:  84.5% Ternary:  15.3% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasTransmission(1)) >> atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(5)) ; 
  atom(hasFuelCons(1)) & atom(hasTransmission(2)) >> atom(hasEngineCap(2)) & atom(hasTransmission(1)) ; 
  atom(hasFuelCons(2)) & atom(hasEngineCap(5)) >> atom(hasTransmission(1)) & atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) & atom(hasBodyType(1)) ; 
  atom(hasTransmission(1)) & atom(hasEngineCap(3)) >> atom(hasBodyType(1)) & atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(2)) & atom(hasTransmission(2)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) 
}.
