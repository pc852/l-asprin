asprin_vL version 1.0
Reading from stdin
-:99:1-16: info: no atoms over signature occur in program:
  output/3

-:88:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:91:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:92:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:93:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 5 0
Answer: 2
preference(1,betterthan) preference(1,(1,11),2,for(and(atom(hasTransmission(1)),atom(hasEngineCap(1)))),()) preference(1,(1,17),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(3)))),()) preference(1,(1,18),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,19),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,20),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,11),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(3)))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,18),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(1)))),()) preference(1,(1,19),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5) output(10,better,1)
Optimization: 0 5
Progression : 0 [1;5] (Error: 4)
Progression : 0 [2;5] (Error: 1.5)
Progression : 0 [3;5] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.061 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 2+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 298.234s (Solving: 297.10s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1188.314s
Threads      : 4        (Winner: 4)

Choices      : 42508398 (Domain: 67745)
Conflicts    : 2455556  (Analyzed: 2455553)
Restarts     : 2813     (Average: 872.93 Last: 217925)
Model-Level  : 384.0   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2462900  (Deleted: 2393832)
  Binary     : 5972     (Ratio:   0.24%)
  Ternary    : 62       (Ratio:   0.00%)
  Conflict   : 2455552  (Average Length: 2406.9 Ratio:  99.70%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 7348     (Average Length:  679.8 Ratio:   0.30%) 
  Distributed: 2495     (Ratio:   0.10% Average LBD: 2.64) 
  Integrated : 7485     (Ratio: 300.00% Unit: 356 Average Jumps: 858.19)
Backjumps    : 2455553  (Average: 12.78 Max: 6863 Sum: 31389509)
  Executed   : 2455502  (Average: 12.78 Max: 6863 Sum: 31389412 Ratio: 100.00%)
  Bounded    : 51       (Average:  1.90 Max:   3 Sum:     97 Ratio:   0.00%)

Rules        : 167363  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36005   
Bodies       : 83395   
  Count      : 102     
Equivalences : 96172    (Atom=Atom: 19416 Body=Body: 13200 Other: 63556)
Tight        : Yes
Variables    : 25848    (Eliminated:    0 Frozen: 16168)
Constraints  : 133314   (Binary:  84.3% Ternary:  15.5% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasBodyType(2)) & atom(hasEngineCap(3)) >> atom(hasTransmission(1)) & atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(3)) ; 
  atom(hasBodyType(2)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasBodyType(1)) & atom(hasTransmission(2)) 
}.
