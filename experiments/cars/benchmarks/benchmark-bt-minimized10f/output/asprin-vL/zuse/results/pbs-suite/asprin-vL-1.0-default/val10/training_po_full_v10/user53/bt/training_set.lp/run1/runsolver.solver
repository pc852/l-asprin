asprin_vL version 1.0
Reading from stdin
-:99:1-16: info: no atoms over signature occur in program:
  output/3

-:88:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:91:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:92:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:93:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 5 0
Answer: 2
preference(1,betterthan) preference(1,(1,7),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,17),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(1)))),()) preference(1,(1,18),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,19),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(1)))),()) preference(1,(1,20),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,7),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,18),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) preference(1,(1,19),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,1) output(8,better,5)
Optimization: 0 5
Progression : 0 [1;5] (Error: 4)
Progression : 0 [2;5] (Error: 1.5)
Progression : 0 [3;5] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.111 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 2+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 298.100s (Solving: 296.95s 1st Model: 0.01s Unsat: 0.00s)
CPU Time     : 1188.554s
Threads      : 4        (Winner: 4)

Choices      : 39617745 (Domain: 85094)
Conflicts    : 2219807  (Analyzed: 2219804)
Restarts     : 2316     (Average: 958.46 Last: 63498)
Model-Level  : 382.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2227084  (Deleted: 2150482)
  Binary     : 5819     (Ratio:   0.26%)
  Ternary    : 138      (Ratio:   0.01%)
  Conflict   : 2219804  (Average Length: 2335.0 Ratio:  99.67%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 7280     (Average Length:  718.6 Ratio:   0.33%) 
  Distributed: 2427     (Ratio:   0.11% Average LBD: 2.66) 
  Integrated : 7281     (Ratio: 300.00% Unit: 298 Average Jumps: 810.29)
Backjumps    : 2219804  (Average: 13.82 Max: 6194 Sum: 30673384)
  Executed   : 2219754  (Average: 13.82 Max: 6194 Sum: 30673290 Ratio: 100.00%)
  Bounded    : 50       (Average:  1.88 Max:   3 Sum:     94 Ratio:   0.00%)

Rules        : 167363  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36005   
Bodies       : 79915   
  Count      : 102     
Equivalences : 96132    (Atom=Atom: 19416 Body=Body: 13160 Other: 63556)
Tight        : Yes
Variables    : 25488    (Eliminated:    0 Frozen: 16168)
Constraints  : 128794   (Binary:  84.1% Ternary:  15.7% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(1)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasEngineCap(2)) & atom(hasBodyType(1)) ; 
  atom(hasEngineCap(1)) & atom(hasTransmission(2)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(2)) 
}.
