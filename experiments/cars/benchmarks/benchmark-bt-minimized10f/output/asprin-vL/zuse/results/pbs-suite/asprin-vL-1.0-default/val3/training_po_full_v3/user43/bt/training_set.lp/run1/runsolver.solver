asprin_vL version 1.0
Reading from stdin
-:102:1-16: info: no atoms over signature occur in program:
  output/3

-:91:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:94:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:95:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:96:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 8 0
Answer: 2
preference(1,betterthan) preference(1,(1,1),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(1)))),()) preference(1,(1,3),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,4),2,for(and(atom(hasBodyType(2)),atom(hasFuelCons(1)))),()) preference(1,(1,9),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,10),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,17),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,18),2,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,19),2,for(atom(hasEngineCap(5))),()) preference(1,(1,20),2,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,3),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,4),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,9),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) preference(1,(1,10),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,18),1,for(and(atom(hasTransmission(1)),atom(hasBodyType(1)))),()) preference(1,(1,19),1,for(atom(hasEngineCap(3))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) output(2,better,7) output(4,better,5) output(7,better,6) output(9,better,10) output(8,better,9) output(10,better,4) output(5,better,1) output(6,better,8)
Optimization: 0 9
Progression : 0 [1;9] (Error: 8)
Answer: 3
preference(1,betterthan) preference(1,(1,1),2,for(and(atom(hasTransmission(1)),atom(hasEngineCap(1)))),()) preference(1,(1,5),2,for(atom(hasBodyType(2))),()) preference(1,(1,13),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,16),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,17),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,18),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(5)))),()) preference(1,(1,19),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(3)))),()) preference(1,(1,20),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,5),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,13),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,16),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) preference(1,(1,17),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(5)))),()) preference(1,(1,18),1,for(atom(hasEngineCap(3))),()) preference(1,(1,19),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) output(2,better,7) output(4,better,5) output(7,better,6) output(9,better,10) output(8,better,9) output(10,better,4) output(5,better,1) output(6,better,8)
Optimization: 0 8
Answer: 4
preference(1,betterthan) preference(1,(1,1),2,for(atom(hasEngineCap(2))),()) preference(1,(1,5),2,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,16),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,18),2,for(atom(hasEngineCap(3))),()) preference(1,(1,19),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,20),2,for(atom(hasTransmission(1))),()) preference(1,(1,1),1,for(atom(hasEngineCap(4))),()) preference(1,(1,5),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,16),1,for(atom(hasBodyType(1))),()) preference(1,(1,18),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(1)))),()) preference(1,(1,19),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(2)))),()) preference(1,(1,20),1,for(atom(hasEngineCap(3))),()) output(2,better,7) output(4,better,5) output(7,better,6) output(9,better,10) output(8,better,9) output(10,better,4) output(5,better,1) output(6,better,8)
Optimization: 0 6
Progression : 0 [2;6] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.079 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 4+
  Optimum    : unknown
Optimization : 0 6
Calls        : 1
Time         : 297.644s (Solving: 296.14s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1185.697s
Threads      : 4        (Winner: 4)

Choices      : 41231511 (Domain: 35567)
Conflicts    : 2121117  (Analyzed: 2121115)
Restarts     : 2523     (Average: 840.71 Last: 164214)
Model-Level  : 573.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2129021  (Deleted: 2059637)
  Binary     : 8662     (Ratio:   0.41%)
  Ternary    : 57       (Ratio:   0.00%)
  Conflict   : 2121115  (Average Length: 3076.3 Ratio:  99.63%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 7906     (Average Length:  240.1 Ratio:   0.37%) 
  Distributed: 2636     (Ratio:   0.12% Average LBD: 2.25) 
  Integrated : 7908     (Ratio: 300.00% Unit: 426 Average Jumps: 742.89)
Backjumps    : 2121115  (Average: 14.31 Max: 8995 Sum: 30354034)
  Executed   : 2121067  (Average: 14.31 Max: 8995 Sum: 30353947 Ratio: 100.00%)
  Bounded    : 48       (Average:  1.81 Max:   3 Sum:     87 Ratio:   0.00%)

Rules        : 228824  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36029   
Bodies       : 102324  
  Count      : 102     
Equivalences : 96541    (Atom=Atom: 19419 Body=Body: 13560 Other: 63562)
Tight        : Yes
Variables    : 29811    (Eliminated:    0 Frozen: 16171)
Constraints  : 163917   (Binary:  84.8% Ternary:  15.0% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasTransmission(1)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(1)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) & atom(hasTransmission(2)) ; 
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasBodyType(2)) & atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) ; 
  atom(hasTransmission(1)) & atom(hasBodyType(1)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(2)) >> atom(hasTransmission(2)) & atom(hasEngineCap(3)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasTransmission(1)) >> atom(hasTransmission(1)) & atom(hasEngineCap(1)) ; 
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasBodyType(2)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) & atom(hasTransmission(2)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(2)) & atom(hasEngineCap(5)) >> atom(hasEngineCap(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(2)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) ; 
  atom(hasBodyType(1)) >> atom(hasEngineCap(2)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(1)) >> atom(hasEngineCap(3)) ; 
  atom(hasFuelCons(1)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(2)) ; 
  atom(hasEngineCap(3)) >> atom(hasTransmission(1)) 
}.
