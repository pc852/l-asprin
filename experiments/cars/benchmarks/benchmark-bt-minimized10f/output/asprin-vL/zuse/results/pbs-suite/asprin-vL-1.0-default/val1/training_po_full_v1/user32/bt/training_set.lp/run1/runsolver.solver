asprin_vL version 1.0
Reading from stdin
-:102:1-16: info: no atoms over signature occur in program:
  output/3

-:91:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:94:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:95:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:96:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 8 0
Answer: 2
preference(1,betterthan) preference(1,(1,1),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,2),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(1)))),()) preference(1,(1,7),2,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,10),2,for(and(atom(hasBodyType(1)),atom(hasEngineCap(5)))),()) preference(1,(1,17),2,for(and(atom(hasFuelCons(2)),atom(hasTransmission(2)))),()) preference(1,(1,18),2,for(atom(hasEngineCap(4))),()) preference(1,(1,19),2,for(and(atom(hasBodyType(2)),atom(hasTransmission(2)))),()) preference(1,(1,20),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,7),1,for(and(atom(hasBodyType(2)),atom(hasFuelCons(1)))),()) preference(1,(1,10),1,for(and(atom(hasTransmission(1)),atom(hasEngineCap(3)))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,18),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,19),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) preference(1,(1,20),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) output(3,better,4) output(7,better,9) output(9,better,2) output(2,better,10) output(5,better,3) output(6,better,7) output(8,better,6) output(10,better,5)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Answer: 3
preference(1,betterthan) preference(1,(1,1),2,for(and(atom(hasFuelCons(2)),atom(hasBodyType(1)))),()) preference(1,(1,4),2,for(atom(hasBodyType(1))),()) preference(1,(1,9),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(2)))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,(1,12),2,for(atom(hasEngineCap(5))),()) preference(1,(1,14),2,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) preference(1,(1,15),2,for(atom(hasEngineCap(4))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(2)))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,9),1,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) preference(1,(1,11),1,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,12),1,for(atom(hasEngineCap(3))),()) preference(1,(1,14),1,for(and(atom(hasEngineCap(4)),atom(hasBodyType(1)))),()) preference(1,(1,15),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) output(3,better,4) output(7,better,9) output(9,better,2) output(2,better,10) output(5,better,3) output(6,better,7) output(8,better,6) output(10,better,5)
Optimization: 0 7
Progression : 0 [2;7] (Error: 2.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.059 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 3+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 298.178s (Solving: 296.69s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1187.730s
Threads      : 4        (Winner: 4)

Choices      : 34733916 (Domain: 41809)
Conflicts    : 2149165  (Analyzed: 2149163)
Restarts     : 2578     (Average: 833.66 Last: 178618)
Model-Level  : 388.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 2159240  (Deleted: 2090154)
  Binary     : 8980     (Ratio:   0.42%)
  Ternary    : 231      (Ratio:   0.01%)
  Conflict   : 2149163  (Average Length: 2859.6 Ratio:  99.53%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 10077    (Average Length:  151.7 Ratio:   0.47%) 
  Distributed: 3362     (Ratio:   0.16% Average LBD: 2.47) 
  Integrated : 10086    (Ratio: 300.00% Unit: 493 Average Jumps: 539.13)
Backjumps    : 2149163  (Average: 11.45 Max: 7388 Sum: 24610770)
  Executed   : 2149122  (Average: 11.45 Max: 7388 Sum: 24610691 Ratio: 100.00%)
  Bounded    : 41       (Average:  1.93 Max:   3 Sum:     79 Ratio:   0.00%)

Rules        : 228824  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36029   
Bodies       : 101044  
  Count      : 102     
Equivalences : 96541    (Atom=Atom: 19419 Body=Body: 13560 Other: 63562)
Tight        : Yes
Variables    : 29491    (Eliminated:    0 Frozen: 16171)
Constraints  : 161557   (Binary:  84.8% Ternary:  15.0% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(1)) >> atom(hasTransmission(1)) & atom(hasBodyType(1)) ; 
  atom(hasBodyType(2)) & atom(hasFuelCons(1)) >> atom(hasBodyType(1)) & atom(hasTransmission(2)) ; 
  atom(hasTransmission(1)) & atom(hasEngineCap(3)) >> atom(hasBodyType(1)) & atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasFuelCons(2)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(2)) >> atom(hasEngineCap(4)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(4)) >> atom(hasBodyType(2)) & atom(hasTransmission(2)) ; 
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) & atom(hasTransmission(1)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasFuelCons(1)) & atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) & atom(hasBodyType(1)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasBodyType(1)) ; 
  atom(hasEngineCap(3)) & atom(hasBodyType(2)) >> atom(hasTransmission(1)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasEngineCap(2)) ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(4)) & atom(hasBodyType(1)) >> atom(hasEngineCap(3)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(2)) >> atom(hasEngineCap(4)) 
}.
