asprin_vL version 1.0
Reading from stdin
-:102:1-16: info: no atoms over signature occur in program:
  output/3

-:91:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:94:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:95:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:96:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 8 0
Answer: 2
preference(1,betterthan) preference(1,(1,3),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,14),2,for(and(atom(hasTransmission(1)),atom(hasEngineCap(3)))),()) preference(1,(1,16),2,for(atom(hasFuelCons(2))),()) preference(1,(1,17),2,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,18),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(1)))),()) preference(1,(1,19),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,20),2,for(and(atom(hasBodyType(2)),atom(hasEngineCap(1)))),()) preference(1,(1,3),1,for(and(atom(hasFuelCons(2)),atom(hasBodyType(1)))),()) preference(1,(1,14),1,for(atom(hasEngineCap(5))),()) preference(1,(1,16),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,17),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,18),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(1)))),()) preference(1,(1,19),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) output(4,better,3) output(7,better,9) output(9,better,5) output(1,better,4) output(8,better,7) output(5,better,1) output(6,better,8) output(10,better,6)
Optimization: 0 7
Progression : 0 [1;7] (Error: 6)
Answer: 3
preference(1,betterthan) preference(1,(1,3),2,for(atom(hasEngineCap(3))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,15),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,16),2,for(and(atom(hasBodyType(2)),atom(hasEngineCap(1)))),()) preference(1,(1,17),2,for(and(atom(hasFuelCons(2)),atom(hasBodyType(1)))),()) preference(1,(1,20),2,for(atom(hasBodyType(1))),()) preference(1,(1,3),1,for(atom(hasEngineCap(5))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) preference(1,(1,15),1,for(and(atom(hasTransmission(2)),atom(hasFuelCons(2)))),()) preference(1,(1,16),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,17),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,20),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(1)))),()) output(4,better,3) output(7,better,9) output(9,better,5) output(1,better,4) output(8,better,7) output(5,better,1) output(6,better,8) output(10,better,6)
Optimization: 0 6
Answer: 4
preference(1,betterthan) preference(1,(1,4),2,for(and(atom(hasFuelCons(2)),atom(hasBodyType(1)))),()) preference(1,(1,13),2,for(atom(hasBodyType(1))),()) preference(1,(1,16),2,for(and(atom(hasBodyType(2)),atom(hasEngineCap(2)))),()) preference(1,(1,17),2,for(and(atom(hasBodyType(2)),atom(hasEngineCap(1)))),()) preference(1,(1,20),2,for(and(atom(hasBodyType(1)),atom(hasEngineCap(3)))),()) preference(1,(1,4),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,13),1,for(atom(hasEngineCap(1))),()) preference(1,(1,16),1,for(and(atom(hasFuelCons(2)),atom(hasTransmission(2)))),()) preference(1,(1,17),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(2)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(5)),atom(hasTransmission(1)))),()) output(4,better,3) output(7,better,9) output(9,better,5) output(1,better,4) output(8,better,7) output(5,better,1) output(6,better,8) output(10,better,6)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Progression : 0 [3;5] (Error: 0.666667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.092 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 4+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 298.354s (Solving: 296.82s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1188.485s
Threads      : 4        (Winner: 4)

Choices      : 36354534 (Domain: 50438)
Conflicts    : 2003774  (Analyzed: 2003771)
Restarts     : 2283     (Average: 877.69 Last: 118037)
Model-Level  : 295.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2014087  (Deleted: 1937100)
  Binary     : 8883     (Ratio:   0.44%)
  Ternary    : 90       (Ratio:   0.00%)
  Conflict   : 2003771  (Average Length: 2731.7 Ratio:  99.49%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 10316    (Average Length:  360.5 Ratio:   0.51%) 
  Distributed: 3439     (Ratio:   0.17% Average LBD: 2.62) 
  Integrated : 10317    (Ratio: 300.00% Unit: 468 Average Jumps: 533.54)
Backjumps    : 2003771  (Average: 13.71 Max: 7423 Sum: 27475909)
  Executed   : 2003722  (Average: 13.71 Max: 7423 Sum: 27475803 Ratio: 100.00%)
  Bounded    : 49       (Average:  2.16 Max:   3 Sum:    106 Ratio:   0.00%)

Rules        : 228824  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36029   
Bodies       : 99504   
  Count      : 102     
Equivalences : 96481    (Atom=Atom: 19419 Body=Body: 13500 Other: 63562)
Tight        : Yes
Variables    : 29411    (Eliminated:    0 Frozen: 16171)
Constraints  : 160057   (Binary:  84.7% Ternary:  15.1% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasFuelCons(2)) & atom(hasBodyType(1)) >> atom(hasEngineCap(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(5)) >> atom(hasTransmission(1)) & atom(hasEngineCap(3)) ; 
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasFuelCons(2)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasFuelCons(1)) & atom(hasBodyType(1)) ; 
  atom(hasFuelCons(2)) & atom(hasEngineCap(1)) >> atom(hasTransmission(1)) & atom(hasBodyType(1)) ; 
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasBodyType(2)) & atom(hasEngineCap(1)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(5)) >> atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) & atom(hasBodyType(2)) >> atom(hasEngineCap(2)) & atom(hasTransmission(2)) ; 
  atom(hasTransmission(2)) & atom(hasFuelCons(2)) >> atom(hasEngineCap(2)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasBodyType(2)) & atom(hasEngineCap(1)) ; 
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasFuelCons(2)) & atom(hasBodyType(1)) ; 
  atom(hasBodyType(2)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasFuelCons(2)) & atom(hasBodyType(1)) ; 
  atom(hasEngineCap(1)) >> atom(hasBodyType(1)) ; 
  atom(hasFuelCons(2)) & atom(hasTransmission(2)) >> atom(hasBodyType(2)) & atom(hasEngineCap(2)) ; 
  atom(hasBodyType(2)) & atom(hasEngineCap(2)) >> atom(hasBodyType(2)) & atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(5)) & atom(hasTransmission(1)) >> atom(hasBodyType(1)) & atom(hasEngineCap(3)) 
}.
