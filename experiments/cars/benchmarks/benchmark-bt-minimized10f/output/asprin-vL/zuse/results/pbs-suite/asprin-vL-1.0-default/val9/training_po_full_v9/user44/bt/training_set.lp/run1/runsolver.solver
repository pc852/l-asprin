asprin_vL version 1.0
Reading from stdin
-:102:1-16: info: no atoms over signature occur in program:
  output/3

-:91:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:94:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:95:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:96:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 8 0
Answer: 2
preference(1,betterthan) preference(1,(1,20),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) output(6,better,8)
Optimization: 7 1
Answer: 3
preference(1,betterthan) preference(1,(1,2),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(1)))),()) preference(1,(1,11),2,for(and(atom(hasFuelCons(2)),atom(hasTransmission(2)))),()) preference(1,(1,15),2,for(and(atom(hasBodyType(1)),atom(hasEngineCap(5)))),()) preference(1,(1,16),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,17),2,for(and(atom(hasBodyType(2)),atom(hasFuelCons(1)))),()) preference(1,(1,18),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(1)))),()) preference(1,(1,19),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,20),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) preference(1,(1,2),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(and(atom(hasBodyType(1)),atom(hasEngineCap(5)))),()) preference(1,(1,15),1,for(and(atom(hasTransmission(1)),atom(hasEngineCap(3)))),()) preference(1,(1,16),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,17),1,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,18),1,for(atom(hasEngineCap(4))),()) preference(1,(1,19),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(3)))),()) preference(1,(1,20),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) output(3,better,4) output(2,better,1) output(4,better,10) output(7,better,6) output(1,better,7) output(5,better,2) output(6,better,8) output(10,better,5)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Answer: 4
preference(1,betterthan) preference(1,(1,2),2,for(and(atom(hasEngineCap(1)),atom(hasFuelCons(1)))),()) preference(1,(1,3),2,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,6),2,for(and(atom(hasTransmission(2)),atom(hasEngineCap(2)))),()) preference(1,(1,10),2,for(atom(hasEngineCap(5))),()) preference(1,(1,15),2,for(atom(hasEngineCap(1))),()) preference(1,(1,16),2,for(and(atom(hasBodyType(2)),atom(hasTransmission(2)))),()) preference(1,(1,17),2,for(atom(hasEngineCap(4))),()) preference(1,(1,2),1,for(atom(hasEngineCap(2))),()) preference(1,(1,3),1,for(atom(hasEngineCap(3))),()) preference(1,(1,6),1,for(atom(hasFuelCons(2))),()) preference(1,(1,10),1,for(and(atom(hasBodyType(1)),atom(hasEngineCap(3)))),()) preference(1,(1,15),1,for(atom(hasEngineCap(4))),()) preference(1,(1,16),1,for(atom(hasBodyType(1))),()) preference(1,(1,17),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(2)))),()) output(3,better,4) output(2,better,1) output(4,better,10) output(7,better,6) output(1,better,7) output(5,better,2) output(6,better,8) output(10,better,5)
Optimization: 0 7
Progression : 0 [2;7] (Error: 2.5)
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.074 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 4+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 297.618s (Solving: 296.04s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1185.478s
Threads      : 4        (Winner: 4)

Choices      : 41201001 (Domain: 34975)
Conflicts    : 2406141  (Analyzed: 2406138)
Restarts     : 2935     (Average: 819.81 Last: 209608)
Model-Level  : 867.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2414602  (Deleted: 2326861)
  Binary     : 9358     (Ratio:   0.39%)
  Ternary    : 110      (Ratio:   0.00%)
  Conflict   : 2406138  (Average Length: 2867.9 Ratio:  99.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8464     (Average Length:   83.6 Ratio:   0.35%) 
  Distributed: 2846     (Ratio:   0.12% Average LBD: 2.21) 
  Integrated : 8538     (Ratio: 300.00% Unit: 735 Average Jumps: 416.30)
Backjumps    : 2406138  (Average: 12.20 Max: 7610 Sum: 29357269)
  Executed   : 2406090  (Average: 12.20 Max: 7610 Sum: 29357179 Ratio: 100.00%)
  Bounded    : 48       (Average:  1.88 Max:   3 Sum:     90 Ratio:   0.00%)

Rules        : 228824  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36029   
Bodies       : 107684  
  Count      : 102     
Equivalences : 96621    (Atom=Atom: 19419 Body=Body: 13640 Other: 63562)
Tight        : Yes
Variables    : 29331    (Eliminated:    0 Frozen: 16171)
Constraints  : 167637   (Binary:  85.5% Ternary:  14.4% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasFuelCons(2)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) & atom(hasBodyType(1)) ; 
  atom(hasBodyType(1)) & atom(hasEngineCap(5)) >> atom(hasFuelCons(2)) & atom(hasTransmission(2)) ; 
  atom(hasTransmission(1)) & atom(hasEngineCap(3)) >> atom(hasBodyType(1)) & atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(2)) & atom(hasTransmission(2)) >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) ; 
  atom(hasBodyType(1)) & atom(hasTransmission(2)) >> atom(hasBodyType(2)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(4)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(1)) ; 
  atom(hasFuelCons(2)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasFuelCons(1)) & atom(hasEngineCap(4)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) >> atom(hasEngineCap(1)) & atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) ; 
  atom(hasFuelCons(2)) >> atom(hasTransmission(2)) & atom(hasEngineCap(2)) ; 
  atom(hasBodyType(1)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(1)) ; 
  atom(hasBodyType(1)) >> atom(hasBodyType(2)) & atom(hasTransmission(2)) ; 
  atom(hasBodyType(2)) & atom(hasEngineCap(2)) >> atom(hasEngineCap(4)) 
}.
