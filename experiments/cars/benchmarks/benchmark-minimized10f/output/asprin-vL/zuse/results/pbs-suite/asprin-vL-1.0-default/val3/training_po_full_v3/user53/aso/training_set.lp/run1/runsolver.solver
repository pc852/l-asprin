asprin_vL version 1.0
Reading from stdin
-:200:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:225:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:306:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:580:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:757:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:958:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:962:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:962:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:968:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1067:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1093:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1213:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1247:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1269:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:117:1-16: info: no atoms over signature occur in program:
  output/3

-:109:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:110:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:111:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:112:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:142:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),0,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(1))))),()) preference(1,(1,1),2,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(3)),atom(hasFuelCons(1)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(2,better,6) output(6,worse,7) output(8,worse,5) output(7,eq,8) output(5,eq,10) output(10,eq,1)
Optimization: 5 4
Answer: 2
preference(1,(1,1),0,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(1))))),()) preference(1,(1,1),2,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(3)),atom(hasFuelCons(1)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(1)),atom(hasFuelCons(2)))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(2,better,6) output(10,better,1) output(6,worse,7) output(8,worse,5) output(7,eq,8) output(5,eq,10)
Optimization: 4 4
Answer: 3
preference(1,(1,1),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),2,for(and(atom(hasTransmission(1)),atom(hasFuelCons(1)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(5)),neg(atom(hasTransmission(2))))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasTransmission(1)),atom(hasFuelCons(1)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(5)),atom(hasFuelCons(2)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(5)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),neg(atom(hasTransmission(1))))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,aso) output(2,better,6) output(7,better,8) output(5,better,10) output(6,worse,7) output(8,worse,5) output(10,worse,1)
Optimization: 3 4
Answer: 4
preference(1,(1,1),0,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(1))))),()) preference(1,(1,4),0,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,3),4,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(and(atom(hasEngineCap(3)),atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasBodyType(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,3),3,for(and(atom(hasTransmission(2)),atom(hasFuelCons(2)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(2)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(2)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasBodyType(2)),neg(atom(hasEngineCap(2))))),()) preference(1,aso) output(2,better,6) output(7,better,8) output(5,better,10) output(10,better,1) output(6,worse,7)
Optimization: 2 4
Answer: 5
preference(1,(1,1),0,for(atom(hasEngineCap(5))),()) preference(1,(1,3),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,4),0,for(and(atom(hasBodyType(2)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,1),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),3,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),3,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),3,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),4,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,1),2,for(and(atom(hasTransmission(2)),neg(atom(hasTransmission(1))))),()) preference(1,(1,3),2,for(and(atom(hasBodyType(2)),neg(atom(hasEngineCap(1))))),()) preference(1,(1,4),2,for(and(atom(hasTransmission(2)),neg(atom(hasTransmission(1))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(2)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(2)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,3),4,for(and(atom(hasBodyType(2)),neg(atom(hasEngineCap(2))))),()) preference(1,aso) output(2,better,6) output(6,better,7) output(7,better,8) output(5,better,10) output(10,better,1) output(8,worse,5)
Optimization: 1 3
Answer: 6
preference(1,(1,3),0,for(and(atom(hasTransmission(1)),neg(atom(hasBodyType(1))))),()) preference(1,(1,3),3,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,2),2,for(and(atom(hasBodyType(1)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,3),2,for(and(atom(hasBodyType(1)),atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(4)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasBodyType(2)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,4),3,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(1)),atom(hasTransmission(2)))),()) preference(1,(1,2),4,for(and(atom(hasBodyType(2)),atom(hasFuelCons(2)))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(2))))),()) preference(1,aso) output(2,better,6) output(6,better,7) output(7,better,8) output(8,better,5) output(5,better,10) output(10,better,1)
Optimization: 0 4
Progression : 0 [1;4] (Error: 3)
Progression : 0 [2;4] (Error: 1)
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,2),0,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,3),3,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),4,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(atom(hasEngineCap(4))),()) preference(1,(1,1),2,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasTransmission(2)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(4)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(2)),atom(hasFuelCons(1)))),()) preference(1,(1,3),1,for(and(atom(hasFuelCons(2)),neg(atom(hasBodyType(2))))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,2),3,for(and(atom(hasFuelCons(1)),atom(hasTransmission(2)))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(2)),neg(atom(hasFuelCons(1))))),()) preference(1,aso) output(2,better,6) output(6,better,7) output(7,better,8) output(8,better,5) output(5,better,10) output(10,better,1)
Optimization: 0 3
OPTIMUM FOUND

Models       : 7
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 21.135s (Solving: 11.48s 1st Model: 0.55s Unsat: 7.02s)
CPU Time     : 55.199s
Threads      : 4        (Winner: 3)

Choices      : 246127   (Domain: 19)
Conflicts    : 10993    (Analyzed: 10990)
Restarts     : 30       (Average: 366.33 Last: 538)
Model-Level  : 2201.3  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 21312    (Deleted: 1177)
  Binary     : 659      (Ratio:   3.09%)
  Ternary    : 1589     (Ratio:   7.46%)
  Conflict   : 10990    (Average Length:  367.5 Ratio:  51.57%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 10322    (Average Length:  119.8 Ratio:  48.43%) 
  Distributed: 3448     (Ratio:  31.37% Average LBD: 3.10) 
  Integrated : 10329    (Ratio: 299.56% Unit: 424 Average Jumps: 160.00)
Backjumps    : 10990    (Average: 13.40 Max: 2580 Sum: 147264)
  Executed   : 10988    (Average: 13.40 Max: 2580 Sum: 147259 Ratio: 100.00%)
  Bounded    : 2        (Average:  2.50 Max:   4 Sum:      5 Ratio:   0.00%)

Rules        : 4097918 
  Choice     : 21      
  Minimize   : 2       
Atoms        : 276434  
Bodies       : 886351  
  Count      : 164     
Equivalences : 830063   (Atom=Atom: 242128 Body=Body: 239030 Other: 348905)
Tight        : Yes
Variables    : 610391   (Eliminated:    0 Frozen: 27123)
Constraints  : 5604281  (Binary:  89.2% Ternary:  10.8% Other:   0.0%)


Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasEngineCap(3)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasBodyType(2)) & not atom(hasBodyType(1))  || atom(hasFuelCons(1)) & not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasEngineCap(3)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasBodyType(2)) & not atom(hasBodyType(1))  || atom(hasFuelCons(1)) & not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) & not atom(hasTransmission(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & atom(hasFuelCons(1)) >> atom(hasBodyType(2)) & not atom(hasTransmission(1))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasBodyType(1)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(5)) & atom(hasFuelCons(2)) >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(5)) & not atom(hasEngineCap(4))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(1)) & atom(hasBodyType(1)) >> atom(hasEngineCap(3)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasBodyType(2)) & not atom(hasBodyType(1))  || atom(hasFuelCons(1)) & not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) & not atom(hasEngineCap(3))  >> atom(hasBodyType(2)) & not atom(hasEngineCap(2))  || atom(hasFuelCons(2)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> not atom(hasFuelCons(1))  >> atom(hasTransmission(2)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(4)) & not atom(hasBodyType(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(2)) & atom(hasFuelCons(2)) >> not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasEngineCap(5))  >> atom(hasTransmission(2)) & not atom(hasTransmission(1))  >> not atom(hasEngineCap(4))  >> not atom(hasTransmission(1))  || atom(hasEngineCap(5)) ; 
  atom(hasEngineCap(2)) & not atom(hasFuelCons(1))  >> atom(hasBodyType(2)) & not atom(hasEngineCap(1))  >> not atom(hasEngineCap(1))  >> atom(hasBodyType(2)) & not atom(hasEngineCap(2))  || not atom(hasEngineCap(4))  ; 
  atom(hasEngineCap(2)) & not atom(hasEngineCap(4))  >> atom(hasTransmission(2)) & not atom(hasTransmission(1))  >> not atom(hasEngineCap(5))  || atom(hasBodyType(2)) & not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasBodyType(1)) & atom(hasEngineCap(2)) >> not atom(hasEngineCap(2))  || atom(hasTransmission(1)) & not atom(hasBodyType(1))  ; 
  atom(hasTransmission(2)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) & atom(hasTransmission(2)) >> atom(hasBodyType(2)) & not atom(hasBodyType(1))  >> atom(hasFuelCons(1)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasBodyType(1)) & not atom(hasEngineCap(4))  >> atom(hasEngineCap(1)) & atom(hasTransmission(2)) >> atom(hasBodyType(2)) & atom(hasFuelCons(2)) ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) & not atom(hasEngineCap(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) & not atom(hasEngineCap(2))  >> atom(hasBodyType(1)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasEngineCap(2))  >> atom(hasFuelCons(2)) & atom(hasBodyType(2)) || not atom(hasEngineCap(4))  ; 
  atom(hasTransmission(2)) & atom(hasFuelCons(1)) >> atom(hasTransmission(2)) & not atom(hasEngineCap(5))  >> atom(hasFuelCons(1)) & atom(hasTransmission(2)) >> not atom(hasEngineCap(5))  || atom(hasFuelCons(2)) & not atom(hasEngineCap(2))  ; 
  atom(hasFuelCons(2)) & not atom(hasBodyType(2))  >> atom(hasEngineCap(4)) >> not atom(hasEngineCap(5))  >> atom(hasEngineCap(2)) & not atom(hasFuelCons(1))  
}.
