asprin_vL version 1.0
Reading from stdin
-:174:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:184:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:199:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:280:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:554:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:731:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:860:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:932:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:936:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:936:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:942:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1041:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1067:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1187:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1221:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1243:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:91:1-16: info: no atoms over signature occur in program:
  output/3

-:83:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:84:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:85:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(6,eq,7) output(7,eq,8) output(8,eq,5) output(5,eq,10) output(10,eq,1)
Optimization: 5 0
Answer: 2
preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(7,better,8) output(8,better,5) output(6,worse,7) output(5,eq,10) output(10,eq,1)
Optimization: 3 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(7,better,8) output(5,better,10) output(8,better,5) output(6,worse,7) output(10,worse,1)
Optimization: 2 2
Answer: 4
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,poset) output(6,better,7) output(5,better,10) output(8,better,5) output(10,better,1) output(7,worse,8)
Optimization: 1 3
Answer: 5
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5) output(10,better,1)
Optimization: 0 3
Progression : 0 [1;3] (Error: 2)
Progression : 0 [2;3] (Error: 0.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.107 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 5+
  Optimum    : unknown
Optimization : 0 3
Calls        : 1
Time         : 297.333s (Solving: 288.81s 1st Model: 1.57s Unsat: 0.00s)
CPU Time     : 1162.082s
Threads      : 4        (Winner: 4)

Choices      : 543427   (Domain: 949)
Conflicts    : 38954    (Analyzed: 38952)
Restarts     : 78       (Average: 499.38 Last: 5761)
Model-Level  : 338.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 3540055  (Deleted: 3441217)
  Binary     : 100      (Ratio:   0.00%)
  Ternary    : 720      (Ratio:   0.02%)
  Conflict   : 38952    (Average Length: 1674.9 Ratio:   1.10%) 
  Loop       : 3496922  (Average Length:   87.0 Ratio:  98.78%) 
  Other      : 4181     (Average Length:   88.3 Ratio:   0.12%) 
  Distributed: 1395     (Ratio:   0.04% Average LBD: 3.68) 
  Integrated : 4185     (Ratio: 300.00% Unit: 71 Average Jumps: 463.99)
Backjumps    : 38952    (Average: 11.12 Max: 4414 Sum: 433114)
  Executed   : 38933    (Average: 11.12 Max: 4414 Sum: 433079 Ratio:  99.99%)
  Bounded    : 19       (Average:  1.84 Max:   3 Sum:     35 Ratio:   0.01%)

Rules        : 1605830 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 15636   
Bodies       : 1484321 
  Count      : 48      
Equivalences : 32482    (Atom=Atom: 4397 Body=Body: 8646 Other: 19439)
Tight        : No       (SCCs: 6 Non-Hcfs: 0 Nodes: 1405404 Gammas: 0)
Variables    : 1413982  (Eliminated:    0 Frozen: 1407243)
Constraints  : 8441731  (Binary:  82.9% Ternary:   0.8% Other:  16.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(2)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(1))  ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(1))  >> not atom(hasBodyType(1))  
}.
