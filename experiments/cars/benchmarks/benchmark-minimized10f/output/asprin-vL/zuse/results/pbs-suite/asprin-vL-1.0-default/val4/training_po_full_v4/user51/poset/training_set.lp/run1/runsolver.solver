asprin_vL version 1.0
Reading from stdin
-:177:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:187:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:202:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:283:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:557:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:734:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:863:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:935:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:939:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:939:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:945:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1044:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1070:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1190:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1224:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1246:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:94:1-16: info: no atoms over signature occur in program:
  output/3

-:86:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:87:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:88:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(2,eq,10) output(10,eq,6) output(6,eq,7) output(7,eq,5) output(5,eq,9) output(9,eq,8) output(8,eq,3) output(3,eq,1)
Optimization: 8 0
Answer: 2
preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(2,better,10) output(7,better,5) output(9,better,8) output(3,better,1) output(6,worse,7) output(5,worse,9) output(8,worse,3) output(10,worse,6)
Optimization: 4 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,poset) output(2,better,10) output(7,better,5) output(6,better,7) output(5,better,9) output(8,better,3) output(9,worse,8) output(3,worse,1) output(10,worse,6)
Optimization: 3 1
Answer: 4
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,poset) output(2,better,10) output(7,better,5) output(3,better,1) output(6,better,7) output(5,better,9) output(8,better,3) output(9,worse,8) output(10,worse,6)
Optimization: 2 2
Answer: 5
preference(1,(1,6),1,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(atom(hasTransmission(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),2,for(atom(hasTransmission(2))),()) preference(1,poset) output(2,better,10) output(7,better,5) output(9,better,8) output(3,better,1) output(6,better,7) output(8,better,3) output(10,better,6) output(5,worse,9)
Optimization: 1 4
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.052 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 5+
  Optimum    : unknown
Optimization : 1 4
Calls        : 1
Time         : 297.585s (Solving: 288.97s 1st Model: 1.79s Unsat: 0.00s)
CPU Time     : 1162.810s
Threads      : 4        (Winner: 4)

Choices      : 1183276  (Domain: 24)
Conflicts    : 95566    (Analyzed: 95566)
Restarts     : 107      (Average: 893.14 Last: 1629)
Model-Level  : 338.2   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 3874534  (Deleted: 3785041)
  Binary     : 1332     (Ratio:   0.03%)
  Ternary    : 28388    (Ratio:   0.73%)
  Conflict   : 95566    (Average Length: 1320.5 Ratio:   2.47%) 
  Loop       : 3746570  (Average Length:  182.5 Ratio:  96.70%) 
  Other      : 32398    (Average Length:    3.5 Ratio:   0.84%) 
  Distributed: 10800    (Ratio:   0.28% Average LBD: 2.75) 
  Integrated : 32398    (Ratio: 299.98% Unit: 97 Average Jumps: 1032.94)
Backjumps    : 95566    (Average:  9.90 Max: 3924 Sum: 946503)
  Executed   : 95543    (Average:  9.90 Max: 3924 Sum: 946459 Ratio: 100.00%)
  Bounded    : 23       (Average:  1.91 Max:   2 Sum:     44 Ratio:   0.00%)

Rules        : 1671756 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 19030   
Bodies       : 1514543 
  Count      : 48      
Equivalences : 36930    (Atom=Atom: 5261 Body=Body: 9551 Other: 22118)
Tight        : No       (SCCs: 9 Non-Hcfs: 0 Nodes: 1434510 Gammas: 0)
Variables    : 1444633  (Eliminated:    0 Frozen: 1437161)
Constraints  : 8592902  (Binary:  82.8% Ternary:   1.1% Other:  16.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(2))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(1))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasTransmission(2)) >> not atom(hasFuelCons(1))  ; 
  not atom(hasFuelCons(1))  >> not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(4)) >> atom(hasTransmission(2)) ; 
  not atom(hasEngineCap(1))  >> not atom(hasBodyType(1))  
}.
