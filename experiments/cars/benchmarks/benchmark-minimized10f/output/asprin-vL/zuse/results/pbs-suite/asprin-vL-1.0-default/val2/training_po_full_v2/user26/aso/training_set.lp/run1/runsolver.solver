asprin_vL version 1.0
Reading from stdin
-:202:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:227:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:308:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:582:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:759:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:960:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:964:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:964:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:970:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1069:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1095:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1215:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1249:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1271:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:119:1-16: info: no atoms over signature occur in program:
  output/3

-:111:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:112:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:113:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:114:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:144:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(4)),neg(atom(hasTransmission(2))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(1)),atom(hasEngineCap(3)))),()) preference(1,(1,4),3,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),atom(hasEngineCap(4)))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasEngineCap(3)),atom(hasEngineCap(4)))),()) preference(1,aso) output(8,eq,7) output(10,eq,6) output(6,eq,8) output(7,eq,9) output(9,eq,5) output(5,eq,1) output(1,eq,4) output(4,eq,3)
Optimization: 8 4
Answer: 2
preference(1,(1,1),2,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(9,better,5) output(7,worse,9) output(1,worse,4) output(8,eq,7) output(6,eq,8) output(5,eq,1) output(4,eq,3)
Optimization: 7 4
Answer: 3
preference(1,(1,1),2,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasTransmission(1)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(10,better,6) output(9,better,5) output(7,worse,9) output(1,worse,4) output(8,eq,7) output(6,eq,8) output(5,eq,1) output(4,eq,3)
Optimization: 6 4
Answer: 4
preference(1,(1,1),0,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,1),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(10,better,6) output(9,better,5) output(4,better,3) output(7,worse,9) output(1,worse,4) output(8,eq,7) output(6,eq,8) output(5,eq,1)
Optimization: 5 4
Answer: 5
preference(1,(1,1),0,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,1),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(10,better,6) output(6,better,8) output(9,better,5) output(4,better,3) output(8,worse,7) output(7,worse,9) output(1,worse,4) output(5,eq,1)
Optimization: 4 4
Answer: 6
preference(1,(1,1),0,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,1),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(8,better,7) output(10,better,6) output(6,better,8) output(9,better,5) output(4,better,3) output(7,worse,9) output(1,worse,4) output(5,eq,1)
Optimization: 3 4
Answer: 7
preference(1,(1,1),0,for(and(atom(hasTransmission(1)),atom(hasFuelCons(2)))),()) preference(1,(1,1),2,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasTransmission(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(1)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(1)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(8,better,7) output(10,better,6) output(6,better,8) output(9,better,5) output(1,better,4) output(4,better,3) output(7,worse,9) output(5,worse,1)
Optimization: 2 4
Answer: 8
preference(1,(1,1),0,for(and(atom(hasTransmission(1)),atom(hasFuelCons(2)))),()) preference(1,(1,2),0,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(and(atom(hasTransmission(1)),atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(1)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(1)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(8,better,7) output(10,better,6) output(6,better,8) output(9,better,5) output(5,better,1) output(1,better,4) output(4,better,3) output(7,worse,9)
Optimization: 1 4
Answer: 9
preference(1,(1,4),0,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,3),2,for(atom(hasTransmission(2))),()) preference(1,(1,1),2,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(1)),atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(3)),atom(hasTransmission(1)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(3)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(3)),neg(atom(hasBodyType(1))))),()) preference(1,(1,4),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(1)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,2),4,for(and(atom(hasTransmission(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,4),4,for(and(atom(hasEngineCap(2)),neg(atom(hasFuelCons(1))))),()) preference(1,aso) output(8,better,7) output(10,better,6) output(6,better,8) output(7,better,9) output(9,better,5) output(5,better,1) output(1,better,4) output(4,better,3)
Optimization: 0 4
Progression : 0 [1;4] (Error: 3)
Progression : 0 [2;4] (Error: 1)
Answer: 10
preference(1,(1,2),4,for(atom(hasTransmission(1))),()) preference(1,(1,1),2,for(and(atom(hasTransmission(2)),atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(1)),atom(hasTransmission(1)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(4)),atom(hasTransmission(2)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(3)),neg(atom(hasTransmission(1))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(2)),neg(atom(hasTransmission(2))))),()) preference(1,(1,1),3,for(and(atom(hasBodyType(1)),atom(hasEngineCap(2)))),()) preference(1,(1,2),3,for(and(atom(hasTransmission(2)),atom(hasFuelCons(2)))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(3)),atom(hasBodyType(1)))),()) preference(1,aso) output(8,better,7) output(10,better,6) output(6,better,8) output(7,better,9) output(9,better,5) output(5,better,1) output(1,better,4) output(4,better,3)
Optimization: 0 3
OPTIMUM FOUND

Models       : 10
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 36.480s (Solving: 24.80s 1st Model: 0.62s Unsat: 15.54s)
CPU Time     : 110.405s
Threads      : 4        (Winner: 3)

Choices      : 399762   (Domain: 46)
Conflicts    : 21849    (Analyzed: 21846)
Restarts     : 57       (Average: 383.26 Last: 1139)
Model-Level  : 2427.6  
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 39266    (Deleted: 4341)
  Binary     : 1044     (Ratio:   2.66%)
  Ternary    : 3334     (Ratio:   8.49%)
  Conflict   : 21846    (Average Length:  691.4 Ratio:  55.64%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 17420    (Average Length:  122.2 Ratio:  44.36%) 
  Distributed: 5818     (Ratio:  26.63% Average LBD: 3.20) 
  Integrated : 17428    (Ratio: 299.55% Unit: 193 Average Jumps: 120.31)
Backjumps    : 21846    (Average: 15.57 Max: 2136 Sum: 340131)
  Executed   : 21842    (Average: 15.57 Max: 2136 Sum: 340112 Ratio:  99.99%)
  Bounded    : 4        (Average:  4.75 Max:   7 Sum:     19 Ratio:   0.01%)

Rules        : 5425028 
  Choice     : 21      
  Minimize   : 2       
Atoms        : 357806  
Bodies       : 976987  
  Count      : 212     
Equivalences : 1081997  (Atom=Atom: 316342 Body=Body: 317136 Other: 448519)
Tight        : Yes
Variables    : 615655   (Eliminated:    0 Frozen: 32371)
Constraints  : 6857457  (Binary:  91.1% Ternary:   8.9% Other:   0.0%)


Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasBodyType(2)) & atom(hasEngineCap(4)) ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(1)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(3)) & atom(hasEngineCap(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(2)) & not atom(hasBodyType(1))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasBodyType(1))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) & atom(hasTransmission(1)) >> atom(hasTransmission(1)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasBodyType(2)) || atom(hasFuelCons(2)) & not atom(hasEngineCap(3))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasEngineCap(5))  ; 
  atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) & atom(hasTransmission(1)) >> atom(hasTransmission(1)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasBodyType(2)) || atom(hasFuelCons(2)) & not atom(hasEngineCap(3))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasEngineCap(5))  ; 
  atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) & atom(hasTransmission(1)) >> atom(hasTransmission(1)) & atom(hasBodyType(2)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasBodyType(2)) || atom(hasFuelCons(2)) & not atom(hasEngineCap(3))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasEngineCap(5))  ; 
  atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(1)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasTransmission(1)) >> atom(hasEngineCap(1)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasBodyType(2)) || atom(hasTransmission(1)) & atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(1)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasEngineCap(5))  ; 
  atom(hasEngineCap(5)) & not atom(hasEngineCap(3))  >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(1)) & not atom(hasBodyType(1))  >> atom(hasTransmission(1)) & atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) & atom(hasBodyType(2)) >> atom(hasFuelCons(2)) & atom(hasTransmission(1)) || atom(hasTransmission(1)) & atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(1)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasEngineCap(5))  || not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasEngineCap(3))  >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) & atom(hasEngineCap(2)) >> atom(hasEngineCap(3)) & atom(hasTransmission(1)) >> atom(hasEngineCap(1)) & not atom(hasEngineCap(4))  >> atom(hasEngineCap(2)) & not atom(hasFuelCons(1))  || not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) & not atom(hasBodyType(1))  >> atom(hasFuelCons(1)) & not atom(hasEngineCap(2))  >> atom(hasFuelCons(1)) & not atom(hasBodyType(2))  >> atom(hasFuelCons(2)) & not atom(hasFuelCons(1))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(1)) & atom(hasFuelCons(2)) >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasBodyType(2))  ; 
  atom(hasEngineCap(3)) & not atom(hasBodyType(1))  >> atom(hasTransmission(2)) >> atom(hasTransmission(1)) & not atom(hasEngineCap(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(4)) & atom(hasTransmission(2)) >> atom(hasTransmission(2)) & atom(hasEngineCap(1)) >> atom(hasBodyType(1)) & atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(3)) & not atom(hasTransmission(1))  >> atom(hasFuelCons(1)) & not atom(hasEngineCap(3))  >> atom(hasTransmission(2)) & atom(hasFuelCons(2)) >> atom(hasTransmission(1)) ; 
  atom(hasEngineCap(2)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(1)) & atom(hasTransmission(1)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(3)) & atom(hasBodyType(1)) 
}.
