asprin_vL version 1.0
Reading from stdin
-:177:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:187:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:202:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:283:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:557:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:734:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:863:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:935:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:939:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:939:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:945:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1044:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1070:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1190:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1224:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1246:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:94:1-16: info: no atoms over signature occur in program:
  output/3

-:86:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:87:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:88:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(2,eq,1) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(7,eq,2) output(1,eq,5) output(5,eq,3) output(3,eq,4)
Optimization: 8 0
Answer: 2
preference(1,(1,12),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,poset) output(7,better,2) output(2,worse,1) output(8,eq,6) output(6,eq,10) output(10,eq,7) output(1,eq,5) output(5,eq,3) output(3,eq,4)
Optimization: 7 1
Answer: 3
preference(1,(1,6),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(2,better,1) output(3,better,4) output(10,worse,7) output(5,worse,3) output(8,eq,6) output(6,eq,10) output(7,eq,2) output(1,eq,5)
Optimization: 6 1
Answer: 4
preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),1,for(atom(hasTransmission(2))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(2,better,1) output(6,better,10) output(3,better,4) output(10,worse,7) output(5,worse,3) output(8,eq,6) output(7,eq,2) output(1,eq,5)
Optimization: 5 2
Answer: 5
preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(3,better,4) output(10,worse,7) output(5,worse,3) output(7,eq,2) output(2,unc,1)
Optimization: 4 2
Answer: 6
preference(1,(1,12),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(8,better,6) output(1,better,5) output(6,better,10) output(7,better,2) output(3,better,4) output(10,worse,7) output(5,worse,3) output(2,unc,1)
Optimization: 3 3
Answer: 7
preference(1,(1,12),1,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,poset) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(7,better,2) output(3,better,4) output(2,worse,1) output(6,eq,10)
Optimization: 2 2
Answer: 8
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,3),1,for(atom(hasBodyType(2))),()) preference(1,(1,11),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(2,better,1) output(10,better,7) output(5,better,3) output(8,better,6) output(1,better,5) output(6,better,10) output(3,better,4) output(7,worse,2)
Optimization: 1 4
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.033 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 1 4
Calls        : 1
Time         : 297.722s (Solving: 288.69s 1st Model: 1.74s Unsat: 0.00s)
CPU Time     : 1161.962s
Threads      : 4        (Winner: 4)

Choices      : 4651824 
Conflicts    : 102222   (Analyzed: 102222)
Restarts     : 102      (Average: 1002.18 Last: 1508)
Model-Level  : 384.0   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 4586972  (Deleted: 4503201)
  Binary     : 588      (Ratio:   0.01%)
  Ternary    : 26992    (Ratio:   0.59%)
  Conflict   : 102222   (Average Length: 2047.1 Ratio:   2.23%) 
  Loop       : 4458107  (Average Length:  179.3 Ratio:  97.19%) 
  Other      : 26643    (Average Length:    3.5 Ratio:   0.58%) 
  Distributed: 8881     (Ratio:   0.19% Average LBD: 2.82) 
  Integrated : 26643    (Ratio: 300.00% Unit: 117 Average Jumps: 1172.05)
Backjumps    : 102222   (Average: 41.57 Max: 68119 Sum: 4249367)
  Executed   : 102195   (Average: 41.57 Max: 68119 Sum: 4249312 Ratio: 100.00%)
  Bounded    : 27       (Average:  2.04 Max:  10 Sum:     55 Ratio:   0.00%)

Rules        : 1671187 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 18639   
Bodies       : 1514096 
  Count      : 48      
Equivalences : 35874    (Atom=Atom: 5056 Body=Body: 9325 Other: 21493)
Tight        : No       (SCCs: 9 Non-Hcfs: 0 Nodes: 1434510 Gammas: 0)
Variables    : 1444425  (Eliminated:    0 Frozen: 1436973)
Constraints  : 8591908  (Binary:  82.8% Ternary:   1.1% Other:  16.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(4))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasTransmission(2)) >> not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(5))  ; 
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasEngineCap(4))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(4))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(2)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(4)) >> atom(hasBodyType(2)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasTransmission(1))  
}.
