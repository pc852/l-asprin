asprin_vL version 1.0
Reading from stdin
-:102:1-16: info: no atoms over signature occur in program:
  output/3

-:91:25-35: info: atom does not occur in any rule head:
  unc(P,M,N)

-:94:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:95:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:96:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,betterthan)
Optimization: 8 0
Answer: 2
preference(1,betterthan) preference(1,(1,3),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(3)))),()) preference(1,(1,15),2,for(and(atom(hasTransmission(1)),atom(hasEngineCap(1)))),()) preference(1,(1,16),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,17),2,for(and(atom(hasEngineCap(2)),atom(hasTransmission(2)))),()) preference(1,(1,18),2,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) preference(1,(1,19),2,for(and(atom(hasFuelCons(1)),atom(hasBodyType(1)))),()) preference(1,(1,20),2,for(and(atom(hasFuelCons(2)),atom(hasTransmission(2)))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(2)),atom(hasTransmission(1)))),()) preference(1,(1,5),1,for(and(atom(hasBodyType(2)),atom(hasFuelCons(1)))),()) preference(1,(1,15),1,for(and(atom(hasFuelCons(2)),atom(hasBodyType(1)))),()) preference(1,(1,16),1,for(and(atom(hasTransmission(1)),atom(hasEngineCap(1)))),()) preference(1,(1,17),1,for(and(atom(hasEngineCap(1)),atom(hasTransmission(2)))),()) preference(1,(1,18),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,19),1,for(and(atom(hasTransmission(2)),atom(hasEngineCap(3)))),()) preference(1,(1,20),1,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(4)))),()) output(2,better,9) output(7,better,2) output(9,better,1) output(5,better,4) output(10,better,7) output(1,better,5) output(6,better,10) output(8,better,6)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Answer: 3
preference(1,betterthan) preference(1,(1,1),2,for(atom(hasEngineCap(4))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(5)),atom(hasFuelCons(2)))),()) preference(1,(1,10),2,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,14),2,for(atom(hasFuelCons(2))),()) preference(1,(1,15),2,for(and(atom(hasEngineCap(3)),atom(hasTransmission(2)))),()) preference(1,(1,17),2,for(and(atom(hasTransmission(1)),atom(hasBodyType(2)))),()) preference(1,(1,18),2,for(atom(hasBodyType(1))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),atom(hasEngineCap(2)))),()) preference(1,(1,10),1,for(atom(hasEngineCap(1))),()) preference(1,(1,14),1,for(atom(hasEngineCap(4))),()) preference(1,(1,15),1,for(and(atom(hasEngineCap(2)),atom(hasBodyType(2)))),()) preference(1,(1,17),1,for(and(atom(hasBodyType(1)),atom(hasTransmission(2)))),()) preference(1,(1,18),1,for(atom(hasEngineCap(3))),()) output(2,better,9) output(7,better,2) output(9,better,1) output(5,better,4) output(10,better,7) output(1,better,5) output(6,better,10) output(8,better,6)
Optimization: 0 7
Progression : 0 [2;7] (Error: 2.5)
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.108 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 3+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 298.301s (Solving: 296.79s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1188.128s
Threads      : 4        (Winner: 4)

Choices      : 35604579 (Domain: 38340)
Conflicts    : 2284960  (Analyzed: 2284957)
Restarts     : 2730     (Average: 836.98 Last: 48454)
Model-Level  : 325.3   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 2293429  (Deleted: 2201254)
  Binary     : 8837     (Ratio:   0.39%)
  Ternary    : 172      (Ratio:   0.01%)
  Conflict   : 2284957  (Average Length: 2723.5 Ratio:  99.63%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8472     (Average Length:   91.3 Ratio:   0.37%) 
  Distributed: 2825     (Ratio:   0.12% Average LBD: 2.27) 
  Integrated : 8475     (Ratio: 300.00% Unit: 541 Average Jumps: 607.82)
Backjumps    : 2284957  (Average: 11.39 Max: 8389 Sum: 26026836)
  Executed   : 2284908  (Average: 11.39 Max: 8389 Sum: 26026741 Ratio: 100.00%)
  Bounded    : 49       (Average:  1.94 Max:   3 Sum:     95 Ratio:   0.00%)

Rules        : 228824  
  Choice     : 4871    
  Minimize   : 2       
Atoms        : 36029   
Bodies       : 102284  
  Count      : 102     
Equivalences : 96541    (Atom=Atom: 19419 Body=Body: 13560 Other: 63562)
Tight        : Yes
Variables    : 28511    (Eliminated:    0 Frozen: 16171)
Constraints  : 159937   (Binary:  85.3% Ternary:  14.5% Other:   0.2%)

No preference instances learned!

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasTransmission(1)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(5)) ; 
  atom(hasBodyType(2)) & atom(hasFuelCons(1)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(3)) ; 
  atom(hasFuelCons(2)) & atom(hasBodyType(1)) >> atom(hasTransmission(1)) & atom(hasEngineCap(1)) ; 
  atom(hasTransmission(1)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(1)) & atom(hasTransmission(2)) >> atom(hasEngineCap(2)) & atom(hasTransmission(2)) ; 
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasFuelCons(1)) & atom(hasEngineCap(4)) ; 
  atom(hasTransmission(2)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(1)) & atom(hasBodyType(1)) ; 
  atom(hasFuelCons(1)) & atom(hasEngineCap(4)) >> atom(hasFuelCons(2)) & atom(hasTransmission(2)) 
}.

Learned preference statement: 

#preference(1,betterthan){
  atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(4)) ; 
  atom(hasTransmission(1)) & atom(hasEngineCap(2)) >> atom(hasEngineCap(5)) & atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(1)) >> atom(hasEngineCap(2)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(4)) >> atom(hasFuelCons(2)) ; 
  atom(hasEngineCap(2)) & atom(hasBodyType(2)) >> atom(hasEngineCap(3)) & atom(hasTransmission(2)) ; 
  atom(hasBodyType(1)) & atom(hasTransmission(2)) >> atom(hasTransmission(1)) & atom(hasBodyType(2)) ; 
  atom(hasEngineCap(3)) >> atom(hasBodyType(1)) 
}.
