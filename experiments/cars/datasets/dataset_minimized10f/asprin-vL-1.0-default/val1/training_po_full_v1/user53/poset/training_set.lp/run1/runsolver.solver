asprin_vL version 1.0
Reading from stdin
-:174:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:184:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:199:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:280:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:554:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:731:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:860:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:932:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:936:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:936:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:942:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1041:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1067:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1187:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1221:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1243:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:91:1-16: info: no atoms over signature occur in program:
  output/3

-:83:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:84:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:85:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(2,eq,6) output(6,eq,7) output(7,eq,8) output(8,eq,5) output(5,eq,10)
Optimization: 5 0
Answer: 2
preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(8,better,5) output(6,worse,7) output(5,eq,10)
Optimization: 2 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(5,better,10) output(8,better,5) output(6,worse,7)
Optimization: 1 2
Answer: 4
preference(1,(1,1),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,8),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,4),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(4))),()) preference(1,(1,5),1,for(atom(hasEngineCap(2))),()) preference(1,(1,6),1,for(atom(hasFuelCons(2))),()) preference(1,(1,7),1,for(atom(hasEngineCap(3))),()) preference(1,(1,10),1,for(atom(hasEngineCap(3))),()) preference(1,(1,3),2,for(atom(hasEngineCap(2))),()) preference(1,(1,5),2,for(atom(hasFuelCons(2))),()) preference(1,(1,7),2,for(atom(hasEngineCap(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(3))),()) preference(1,(1,9),2,for(atom(hasEngineCap(3))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 12
Progression : 0 [ 1;12] (Error: 11)
Answer: 5
preference(1,(1,1),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,9),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,7),1,for(atom(hasEngineCap(3))),()) preference(1,(1,10),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),2,for(atom(hasEngineCap(3))),()) preference(1,(1,5),2,for(atom(hasFuelCons(1))),()) preference(1,(1,7),2,for(atom(hasEngineCap(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 11
Answer: 6
preference(1,(1,2),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,8),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,2),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,9),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,7),1,for(atom(hasEngineCap(3))),()) preference(1,(1,10),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),2,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasEngineCap(2))),()) preference(1,(1,8),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 10
Answer: 7
preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,10),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,8),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,10),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,5),1,for(atom(hasEngineCap(2))),()) preference(1,(1,7),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),2,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasEngineCap(2))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 9
Answer: 8
preference(1,(1,3),1,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,5),1,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,8),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,9),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,5),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,7),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,8),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,11),2,for(neg(atom(hasFuelCons(1)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,7),1,for(atom(hasEngineCap(3))),()) preference(1,(1,12),1,for(atom(hasEngineCap(4))),()) preference(1,(1,4),2,for(atom(hasEngineCap(3))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 8
Answer: 9
preference(1,(1,2),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,11),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),1,for(atom(hasBodyType(2))),()) preference(1,(1,9),1,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasEngineCap(3))),()) preference(1,(1,11),2,for(atom(hasFuelCons(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 7
Answer: 10
preference(1,(1,2),1,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,4),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,7),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,2),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,4),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,9),2,for(neg(atom(hasEngineCap(1)))),()) preference(1,(1,8),1,for(atom(hasBodyType(2))),()) preference(1,(1,9),1,for(atom(hasEngineCap(3))),()) preference(1,(1,7),2,for(atom(hasEngineCap(3))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 6
Answer: 11
preference(1,(1,10),1,for(atom(hasEngineCap(4))),()) preference(1,(1,11),1,for(atom(hasFuelCons(1))),()) preference(1,(1,12),1,for(atom(hasEngineCap(2))),()) preference(1,(1,10),2,for(atom(hasFuelCons(1))),()) preference(1,(1,11),2,for(atom(hasEngineCap(2))),()) preference(1,(1,12),2,for(atom(hasBodyType(2))),()) preference(1,poset) output(2,better,6) output(7,better,8) output(6,better,7) output(5,better,10) output(8,better,5)
Optimization: 0 3
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.045 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 0 3
Calls        : 1
Time         : 298.036s (Solving: 288.17s 1st Model: 1.58s Unsat: 0.00s)
CPU Time     : 1160.828s
Threads      : 4        (Winner: 4)

Choices      : 1403719  (Domain: 549)
Conflicts    : 96983    (Analyzed: 96982)
Restarts     : 93       (Average: 1042.82 Last: 12448)
Model-Level  : 1787.0  
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 2402048  (Deleted: 2305607)
  Binary     : 148      (Ratio:   0.01%)
  Ternary    : 24440    (Ratio:   1.02%)
  Conflict   : 96982    (Average Length: 1130.2 Ratio:   4.04%) 
  Loop       : 2283640  (Average Length:  239.1 Ratio:  95.07%) 
  Other      : 21426    (Average Length:    3.3 Ratio:   0.89%) 
  Distributed: 7202     (Ratio:   0.30% Average LBD: 2.88) 
  Integrated : 21606    (Ratio: 300.00% Unit: 43 Average Jumps: 1154.09)
Backjumps    : 96982    (Average: 12.32 Max: 33129 Sum: 1195148)
  Executed   : 96969    (Average: 12.32 Max: 33129 Sum: 1195123 Ratio: 100.00%)
  Bounded    : 13       (Average:  1.92 Max:   2 Sum:     25 Ratio:   0.00%)

Rules        : 1605830 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 15636   
Bodies       : 1484321 
  Count      : 48      
Equivalences : 32484    (Atom=Atom: 4395 Body=Body: 8643 Other: 19446)
Tight        : No       (SCCs: 6 Non-Hcfs: 0 Nodes: 1405404 Gammas: 0)
Variables    : 1413982  (Eliminated:    0 Frozen: 1407243)
Constraints  : 8441731  (Binary:  82.9% Ternary:   0.8% Other:  16.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasTransmission(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(4)) >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(5))  >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(2)) >> atom(hasFuelCons(2)) ; 
  atom(hasFuelCons(2)) >> not atom(hasEngineCap(5))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) ; 
  not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(1))  >> atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(2))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasTransmission(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  >> atom(hasEngineCap(3)) ; 
  not atom(hasEngineCap(1))  >> atom(hasFuelCons(1)) ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(2))  >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(2))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  >> atom(hasEngineCap(3)) ; 
  not atom(hasTransmission(2))  >> not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(2))  >> atom(hasEngineCap(2)) ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(2))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  >> atom(hasEngineCap(3)) ; 
  atom(hasEngineCap(2)) >> not atom(hasEngineCap(2))  ; 
  atom(hasEngineCap(3)) >> atom(hasEngineCap(2)) ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  ; 
  not atom(hasTransmission(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasBodyType(1))  >> not atom(hasEngineCap(5))  ; 
  not atom(hasEngineCap(1))  >> atom(hasEngineCap(3)) ; 
  not atom(hasTransmission(2))  >> not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasTransmission(2))  ; 
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  ; 
  not atom(hasEngineCap(5))  >> not atom(hasFuelCons(1))  ; 
  atom(hasEngineCap(4)) >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(3))  >> atom(hasEngineCap(3)) ; 
  atom(hasBodyType(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(2))  >> atom(hasFuelCons(2)) ; 
  not atom(hasEngineCap(2))  >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(1))  >> not atom(hasEngineCap(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(3))  >> atom(hasEngineCap(3)) ; 
  atom(hasBodyType(2)) >> not atom(hasTransmission(2))  ; 
  atom(hasEngineCap(3)) >> not atom(hasEngineCap(1))  ; 
  not atom(hasEngineCap(2))  >> atom(hasBodyType(2)) 
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(4)) >> atom(hasFuelCons(1)) ; 
  atom(hasFuelCons(1)) >> atom(hasEngineCap(2)) ; 
  atom(hasEngineCap(2)) >> atom(hasBodyType(2)) 
}.
