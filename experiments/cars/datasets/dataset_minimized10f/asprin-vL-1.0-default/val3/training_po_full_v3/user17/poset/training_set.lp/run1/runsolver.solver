asprin_vL version 1.0
Reading from stdin
-:177:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:187:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:202:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:283:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:557:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:734:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:863:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:935:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:939:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:939:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:945:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1044:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1070:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1190:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1224:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1246:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:94:1-16: info: no atoms over signature occur in program:
  output/3

-:86:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:87:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:88:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(5,eq,4) output(8,eq,6) output(6,eq,7) output(7,eq,2) output(2,eq,9) output(9,eq,10) output(10,eq,1) output(1,eq,5)
Optimization: 8 0
Answer: 2
preference(1,(1,6),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,10) output(2,better,9) output(5,worse,4) output(6,worse,7) output(8,eq,6) output(7,eq,2) output(10,eq,1) output(1,eq,5)
Optimization: 6 1
Answer: 3
preference(1,(1,12),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,poset) output(5,better,4) output(6,better,7) output(2,better,9) output(9,worse,10) output(8,eq,6) output(7,eq,2) output(10,eq,1) output(1,eq,5)
Optimization: 5 1
Answer: 4
preference(1,(1,12),1,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,poset) output(6,better,7) output(8,better,6) output(1,better,5) output(2,better,9) output(5,worse,4) output(9,worse,10) output(7,worse,2) output(10,eq,1)
Optimization: 4 1
Answer: 5
preference(1,(1,12),1,for(neg(atom(hasTransmission(1)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(2)))),()) preference(1,(1,12),2,for(neg(atom(hasTransmission(2)))),()) preference(1,(1,6),1,for(atom(hasBodyType(1))),()) preference(1,poset) output(9,better,10) output(10,better,1) output(8,better,6) output(1,better,5) output(2,better,9) output(5,worse,4) output(6,worse,7) output(7,worse,2)
Optimization: 3 2
Answer: 6
preference(1,(1,12),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,poset) output(9,better,10) output(5,better,4) output(6,better,7) output(8,better,6) output(1,better,5) output(2,better,9) output(10,worse,1) output(7,eq,2)
Optimization: 2 2
Answer: 7
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),2,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,poset) output(9,better,10) output(5,better,4) output(6,better,7) output(8,better,6) output(1,better,5) output(7,better,2) output(2,better,9) output(10,worse,1)
Optimization: 1 3
Answer: 8
preference(1,(1,6),1,for(neg(atom(hasFuelCons(2)))),()) preference(1,(1,12),1,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),2,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,6),2,for(neg(atom(hasEngineCap(4)))),()) preference(1,(1,12),2,for(neg(atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(atom(hasEngineCap(1))),()) preference(1,(1,11),1,for(atom(hasTransmission(2))),()) preference(1,(1,11),2,for(atom(hasEngineCap(1))),()) preference(1,poset) output(9,better,10) output(5,better,4) output(6,better,7) output(10,better,1) output(8,better,6) output(1,better,5) output(7,better,2) output(2,better,9)
Optimization: 0 4
Progression : 0 [1;4] (Error: 3)
Progression : 0 [2;4] (Error: 1)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.707 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 0 4
Calls        : 1
Time         : 298.942s (Solving: 289.29s 1st Model: 1.69s Unsat: 0.00s)
CPU Time     : 1163.264s
Threads      : 4        (Winner: 4)

Choices      : 300070   (Domain: 667)
Conflicts    : 30973    (Analyzed: 30971)
Restarts     : 83       (Average: 373.14 Last: 646)
Model-Level  : 364.8   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 3168997  (Deleted: 3103039)
  Binary     : 84       (Ratio:   0.00%)
  Ternary    : 549      (Ratio:   0.02%)
  Conflict   : 30971    (Average Length: 2562.3 Ratio:   0.98%) 
  Loop       : 3137154  (Average Length:   57.3 Ratio:  99.00%) 
  Other      : 872      (Average Length:   17.1 Ratio:   0.03%) 
  Distributed: 291      (Ratio:   0.01% Average LBD: 2.92) 
  Integrated : 873      (Ratio: 300.00% Unit: 45 Average Jumps: 435.87)
Backjumps    : 30971    (Average:  7.26 Max: 3301 Sum: 224933)
  Executed   : 30957    (Average:  7.26 Max: 3301 Sum: 224906 Ratio:  99.99%)
  Bounded    : 14       (Average:  1.93 Max:   3 Sum:     27 Ratio:   0.01%)

Rules        : 1670812 
  Choice     : 37      
  Minimize   : 2       
Atoms        : 18382   
Bodies       : 1513811 
  Count      : 48      
Equivalences : 35187    (Atom=Atom: 4924 Body=Body: 9176 Other: 21087)
Tight        : No       (SCCs: 9 Non-Hcfs: 0 Nodes: 1434510 Gammas: 0)
Variables    : 1444288  (Eliminated:    0 Frozen: 1436848)
Constraints  : 8591219  (Binary:  82.8% Ternary:   1.1% Other:  16.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasFuelCons(2))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  not atom(hasEngineCap(2))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasBodyType(1)) >> not atom(hasEngineCap(2))  ; 
  not atom(hasTransmission(1))  >> not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasEngineCap(3))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasFuelCons(2))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(4))  ; 
  not atom(hasEngineCap(3))  >> not atom(hasBodyType(1))  
}.

Learned preference statement: 

#preference(1,poset){
  atom(hasEngineCap(1)) >> not atom(hasEngineCap(3))  ; 
  not atom(hasFuelCons(2))  >> not atom(hasEngineCap(4))  ; 
  atom(hasTransmission(2)) >> atom(hasEngineCap(1)) ; 
  not atom(hasEngineCap(3))  >> not atom(hasBodyType(1))  
}.
