asprin_vL version 1.0
Reading from stdin
-:202:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:227:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:308:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:582:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:759:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:960:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:964:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:964:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:970:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:1069:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:1095:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:1215:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:1249:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:1271:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:119:1-16: info: no atoms over signature occur in program:
  output/3

-:111:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:112:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:113:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:114:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:144:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),4,for(and(atom(hasEngineCap(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(5,eq,1) output(10,eq,5) output(1,eq,4) output(4,eq,3) output(3,eq,6) output(6,eq,8) output(8,eq,2) output(2,eq,7)
Optimization: 8 4
Answer: 2
preference(1,(1,1),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),2,for(and(atom(hasFuelCons(1)),neg(atom(hasTransmission(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),3,for(and(atom(hasFuelCons(1)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(5)),atom(hasEngineCap(1)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(1)),atom(hasEngineCap(4)))),()) preference(1,(1,1),4,for(and(atom(hasEngineCap(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),4,for(and(atom(hasFuelCons(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(3,better,6) output(5,eq,1) output(10,eq,5) output(1,eq,4) output(4,eq,3) output(6,eq,8) output(8,eq,2) output(2,eq,7)
Optimization: 7 4
Answer: 3
preference(1,(1,1),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasBodyType(2)),atom(hasEngineCap(4)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(5)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(1)),atom(hasBodyType(1)))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),1,for(and(atom(hasBodyType(2)),atom(hasBodyType(1)))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(1)),neg(atom(hasTransmission(2))))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(5)),atom(hasEngineCap(1)))),()) preference(1,(1,4),3,for(and(atom(hasTransmission(2)),atom(hasEngineCap(5)))),()) preference(1,(1,1),4,for(and(atom(hasEngineCap(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(4)),atom(hasTransmission(1)))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(1)))),()) preference(1,(1,4),4,for(and(atom(hasEngineCap(2)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(3,better,6) output(2,better,7) output(6,worse,8) output(5,eq,1) output(10,eq,5) output(1,eq,4) output(4,eq,3) output(8,eq,2)
Optimization: 6 4
Answer: 4
preference(1,(1,1),2,for(and(atom(hasEngineCap(5)),atom(hasEngineCap(1)))),()) preference(1,(1,2),2,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(4)))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(4)),atom(hasFuelCons(2)))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,1),1,for(and(atom(hasBodyType(2)),atom(hasEngineCap(4)))),()) preference(1,(1,2),1,for(and(atom(hasBodyType(2)),atom(hasBodyType(1)))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(4)),neg(atom(hasBodyType(1))))),()) preference(1,(1,2),3,for(and(atom(hasBodyType(2)),atom(hasEngineCap(4)))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(5)),atom(hasEngineCap(1)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,1),4,for(and(atom(hasEngineCap(1)),neg(atom(hasBodyType(2))))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(3)),atom(hasEngineCap(4)))),()) preference(1,(1,3),4,for(and(atom(hasEngineCap(5)),atom(hasBodyType(2)))),()) preference(1,(1,4),4,for(and(atom(hasEngineCap(2)),neg(atom(hasEngineCap(5))))),()) preference(1,aso) output(10,better,5) output(3,better,6) output(2,better,7) output(5,worse,1) output(6,worse,8) output(1,eq,4) output(4,eq,3) output(8,eq,2)
Optimization: 5 4
Answer: 5
preference(1,(1,1),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(2)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(4)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,2),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(1)),atom(hasEngineCap(3)))),()) preference(1,(1,4),3,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,4),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(4))))),()) preference(1,aso) output(5,better,1) output(10,better,5) output(4,better,3) output(2,better,7) output(1,worse,4) output(6,worse,8) output(8,eq,2)
Optimization: 4 4
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,1),2,for(and(atom(hasEngineCap(2)),atom(hasFuelCons(1)))),()) preference(1,(1,2),2,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(4)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasBodyType(2)),atom(hasTransmission(2)))),()) preference(1,(1,2),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(1)),atom(hasEngineCap(3)))),()) preference(1,(1,4),3,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,4),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(4))))),()) preference(1,aso) output(5,better,1) output(10,better,5) output(4,better,3) output(6,better,8) output(2,better,7) output(1,worse,4) output(8,worse,2)
Optimization: 3 4
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,1),2,for(and(atom(hasBodyType(1)),neg(atom(hasTransmission(1))))),()) preference(1,(1,2),2,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,3),2,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(4)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,2),3,for(and(atom(hasBodyType(1)),atom(hasEngineCap(2)))),()) preference(1,(1,3),3,for(and(atom(hasEngineCap(1)),atom(hasEngineCap(3)))),()) preference(1,(1,4),3,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),4,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,3),4,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(5))))),()) preference(1,(1,4),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(4))))),()) preference(1,aso) output(5,better,1) output(10,better,5) output(4,better,3) output(6,better,8) output(8,better,2) output(2,better,7) output(1,worse,4) output(3,worse,6)
Optimization: 2 4
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),3,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(and(atom(hasBodyType(1)),neg(atom(hasTransmission(1))))),()) preference(1,(1,2),2,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(3)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(4)),atom(hasEngineCap(3)))),()) preference(1,(1,1),1,for(and(atom(hasBodyType(2)),neg(atom(hasEngineCap(1))))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(4)),neg(atom(hasTransmission(2))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasBodyType(1)),neg(atom(hasEngineCap(3))))),()) preference(1,(1,1),3,for(and(atom(hasFuelCons(2)),atom(hasEngineCap(2)))),()) preference(1,(1,2),3,for(and(atom(hasBodyType(1)),atom(hasEngineCap(2)))),()) preference(1,(1,4),3,for(and(atom(hasFuelCons(2)),atom(hasFuelCons(1)))),()) preference(1,(1,1),4,for(and(atom(hasBodyType(2)),atom(hasTransmission(1)))),()) preference(1,(1,2),4,for(and(atom(hasFuelCons(1)),atom(hasEngineCap(1)))),()) preference(1,(1,3),4,for(and(atom(hasFuelCons(1)),neg(atom(hasTransmission(2))))),()) preference(1,(1,4),4,for(and(atom(hasTransmission(1)),neg(atom(hasEngineCap(4))))),()) preference(1,aso) output(5,better,1) output(10,better,5) output(4,better,3) output(3,better,6) output(6,better,8) output(8,better,2) output(2,better,7) output(1,worse,4)
Optimization: 1 4
Answer: 9
preference(1,(1,2),0,for(and(atom(hasFuelCons(2)),neg(atom(hasEngineCap(1))))),()) preference(1,(1,4),0,for(neg(atom(hasEngineCap(3)))),()) preference(1,(1,3),4,for(neg(atom(hasEngineCap(5)))),()) preference(1,(1,1),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,2),2,for(and(atom(hasFuelCons(1)),neg(atom(hasEngineCap(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(2)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),2,for(and(atom(hasTransmission(2)),atom(hasEngineCap(1)))),()) preference(1,(1,1),1,for(and(atom(hasBodyType(2)),atom(hasFuelCons(2)))),()) preference(1,(1,2),1,for(and(atom(hasEngineCap(5)),neg(atom(hasEngineCap(4))))),()) preference(1,(1,3),1,for(and(atom(hasFuelCons(2)),atom(hasTransmission(2)))),()) preference(1,(1,4),1,for(and(atom(hasEngineCap(3)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,1),3,for(and(atom(hasEngineCap(3)),atom(hasBodyType(1)))),()) preference(1,(1,2),3,for(and(atom(hasBodyType(1)),atom(hasEngineCap(2)))),()) preference(1,(1,3),3,for(and(atom(hasTransmission(1)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(4)),atom(hasFuelCons(1)))),()) preference(1,(1,1),4,for(and(atom(hasFuelCons(1)),atom(hasTransmission(2)))),()) preference(1,(1,2),4,for(and(atom(hasEngineCap(1)),atom(hasTransmission(1)))),()) preference(1,(1,4),4,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(5,better,1) output(10,better,5) output(1,better,4) output(4,better,3) output(3,better,6) output(6,better,8) output(8,better,2) output(2,better,7)
Optimization: 0 4
Progression : 0 [1;4] (Error: 3)
Progression : 0 [2;4] (Error: 1)
Answer: 10
preference(1,(1,2),2,for(and(atom(hasEngineCap(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),2,for(and(atom(hasEngineCap(2)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,4),2,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,2),1,for(and(atom(hasTransmission(2)),neg(atom(hasFuelCons(1))))),()) preference(1,(1,3),1,for(and(atom(hasEngineCap(5)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,4),1,for(and(atom(hasFuelCons(2)),atom(hasBodyType(2)))),()) preference(1,(1,2),3,for(and(atom(hasEngineCap(4)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),3,for(and(atom(hasFuelCons(2)),atom(hasTransmission(1)))),()) preference(1,(1,4),3,for(and(atom(hasEngineCap(3)),atom(hasTransmission(1)))),()) preference(1,(1,2),4,for(and(atom(hasBodyType(1)),neg(atom(hasFuelCons(2))))),()) preference(1,(1,3),4,for(and(atom(hasFuelCons(1)),neg(atom(hasTransmission(1))))),()) preference(1,(1,4),4,for(and(atom(hasTransmission(2)),neg(atom(hasFuelCons(2))))),()) preference(1,aso) output(5,better,1) output(10,better,5) output(1,better,4) output(4,better,3) output(3,better,6) output(6,better,8) output(8,better,2) output(2,better,7)
Optimization: 0 3
OPTIMUM FOUND

Models       : 10
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 42.598s (Solving: 30.86s 1st Model: 0.62s Unsat: 6.38s)
CPU Time     : 134.703s
Threads      : 4        (Winner: 1)

Choices      : 512019   (Domain: 46)
Conflicts    : 31863    (Analyzed: 31859)
Restarts     : 78       (Average: 408.45 Last: 1444)
Model-Level  : 2989.9  
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 51847    (Deleted: 9099)
  Binary     : 1541     (Ratio:   2.97%)
  Ternary    : 3432     (Ratio:   6.62%)
  Conflict   : 31857    (Average Length:  523.2 Ratio:  61.44%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 19990    (Average Length:  126.4 Ratio:  38.56%) 
  Distributed: 6671     (Ratio:  20.94% Average LBD: 3.26) 
  Integrated : 19990    (Ratio: 299.66% Unit: 389 Average Jumps: 62.94)
Backjumps    : 31859    (Average: 13.54 Max: 3173 Sum: 431406)
  Executed   : 31853    (Average: 13.54 Max: 3173 Sum: 431379 Ratio:  99.99%)
  Bounded    : 6        (Average:  4.50 Max:   7 Sum:     27 Ratio:   0.01%)

Rules        : 5425252 
  Choice     : 21      
  Minimize   : 2       
Atoms        : 357862  
Bodies       : 977331  
  Count      : 212     
Equivalences : 1081913  (Atom=Atom: 315794 Body=Body: 316440 Other: 449679)
Tight        : Yes
Variables    : 616203   (Eliminated:    0 Frozen: 32919)
Constraints  : 6859213  (Binary:  91.1% Ternary:   8.9% Other:   0.0%)


Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(1)) & not atom(hasBodyType(2))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(1)) & not atom(hasBodyType(2))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  >> atom(hasFuelCons(1)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(5)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasEngineCap(1)) & atom(hasEngineCap(4)) >> atom(hasFuelCons(1)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(1)) & atom(hasBodyType(1)) >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasFuelCons(1)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(1)) & not atom(hasBodyType(2))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasTransmission(1)) ; 
  atom(hasBodyType(2)) & atom(hasBodyType(1)) >> atom(hasBodyType(2)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(4)) & atom(hasEngineCap(1)) ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(5)) >> atom(hasTransmission(2)) & atom(hasEngineCap(5)) >> atom(hasEngineCap(2)) & not atom(hasFuelCons(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(2)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(5)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(4)) & not atom(hasBodyType(1))  >> atom(hasEngineCap(1)) & not atom(hasBodyType(2))  ; 
  atom(hasBodyType(2)) & atom(hasBodyType(1)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(4)) >> atom(hasBodyType(2)) & atom(hasEngineCap(4)) >> atom(hasEngineCap(3)) & atom(hasEngineCap(4)) ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasFuelCons(2)) >> atom(hasEngineCap(5)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(5)) & atom(hasBodyType(2)) ; 
  atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasEngineCap(1)) & not atom(hasBodyType(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(2)) & not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(2)) & atom(hasFuelCons(2)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasFuelCons(2)) & atom(hasEngineCap(2)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) ; 
  atom(hasEngineCap(4)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(1)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & not atom(hasEngineCap(5))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasTransmission(1)) & not atom(hasEngineCap(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) & atom(hasEngineCap(2)) >> atom(hasEngineCap(2)) & atom(hasFuelCons(1)) >> atom(hasBodyType(2)) & atom(hasTransmission(2)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) || not atom(hasEngineCap(3))  ; 
  atom(hasEngineCap(4)) & not atom(hasTransmission(2))  >> atom(hasEngineCap(3)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(1)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & not atom(hasEngineCap(5))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasTransmission(1)) & not atom(hasEngineCap(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasBodyType(1)) & not atom(hasTransmission(1))  >> atom(hasFuelCons(2)) & atom(hasEngineCap(2)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) || not atom(hasEngineCap(3))  ; 
  atom(hasEngineCap(4)) & not atom(hasTransmission(2))  >> atom(hasFuelCons(1)) & not atom(hasEngineCap(2))  >> atom(hasBodyType(1)) & atom(hasEngineCap(2)) >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(1)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & not atom(hasEngineCap(5))  ; 
  atom(hasTransmission(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasTransmission(1)) & not atom(hasEngineCap(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasBodyType(2)) & not atom(hasEngineCap(1))  >> atom(hasBodyType(1)) & not atom(hasTransmission(1))  >> atom(hasFuelCons(2)) & atom(hasEngineCap(2)) >> atom(hasBodyType(2)) & atom(hasTransmission(1)) || not atom(hasEngineCap(3))  ; 
  atom(hasBodyType(1)) & not atom(hasEngineCap(3))  >> atom(hasEngineCap(4)) & atom(hasEngineCap(3)) >> atom(hasFuelCons(2)) & atom(hasFuelCons(1)) >> atom(hasTransmission(1)) & not atom(hasEngineCap(4))  || not atom(hasEngineCap(3))  ; 
  atom(hasEngineCap(4)) & not atom(hasTransmission(2))  >> atom(hasFuelCons(1)) & not atom(hasEngineCap(2))  >> atom(hasBodyType(1)) & atom(hasEngineCap(2)) >> atom(hasFuelCons(1)) & atom(hasEngineCap(1)) ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(3)) & not atom(hasEngineCap(4))  >> not atom(hasEngineCap(5))  >> atom(hasFuelCons(1)) & not atom(hasTransmission(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasEngineCap(5)) & not atom(hasEngineCap(4))  >> atom(hasFuelCons(1)) & not atom(hasEngineCap(2))  >> atom(hasBodyType(1)) & atom(hasEngineCap(2)) >> atom(hasEngineCap(1)) & atom(hasTransmission(1)) || atom(hasFuelCons(2)) & not atom(hasEngineCap(1))  ; 
  atom(hasEngineCap(3)) & not atom(hasFuelCons(1))  >> atom(hasTransmission(2)) & atom(hasEngineCap(1)) >> atom(hasEngineCap(4)) & atom(hasFuelCons(1)) >> atom(hasBodyType(1)) & not atom(hasFuelCons(2))  || not atom(hasEngineCap(3))  ; 
  atom(hasBodyType(2)) & atom(hasFuelCons(2)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(3)) & atom(hasBodyType(1)) >> atom(hasFuelCons(1)) & atom(hasTransmission(2)) ; 
  atom(hasFuelCons(2)) & atom(hasTransmission(2)) >> atom(hasEngineCap(2)) & not atom(hasFuelCons(1))  >> atom(hasTransmission(1)) & not atom(hasFuelCons(1))  >> not atom(hasEngineCap(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasTransmission(2)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(1)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(4)) & not atom(hasFuelCons(2))  >> atom(hasBodyType(1)) & not atom(hasFuelCons(2))  ; 
  atom(hasEngineCap(5)) & not atom(hasFuelCons(2))  >> atom(hasEngineCap(2)) & not atom(hasFuelCons(1))  >> atom(hasFuelCons(2)) & atom(hasTransmission(1)) >> atom(hasFuelCons(1)) & not atom(hasTransmission(1))  ; 
  atom(hasFuelCons(2)) & atom(hasBodyType(2)) >> atom(hasEngineCap(5)) & not atom(hasFuelCons(1))  >> atom(hasEngineCap(3)) & atom(hasTransmission(1)) >> atom(hasTransmission(2)) & not atom(hasFuelCons(2))  
}.
